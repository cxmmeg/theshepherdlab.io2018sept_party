; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__UVISION_VERSION=526 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp.crf ..\..\User\bsp\bsp.c]
                          THUMB

                          AREA ||i.PrintfID||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  PrintfID PROC
;;;113    */
;;;114    void PrintfID(void)
000000  b570              PUSH     {r4-r6,lr}
;;;115    {
;;;116    	printf("*************************************************************\r\n");
000002  a00f              ADR      r0,|L1.64|
000004  f7fffffe          BL       __2printf
;;;117    	/* 检测CPU ID */
;;;118    	{
;;;119    		/* 参考手册：
;;;120    		32.6.1 MCU device ID code
;;;121    		33.1 Unique device ID register (96 bits)
;;;122    		*/
;;;123    		uint32_t CPU_Sn0, CPU_Sn1, CPU_Sn2;
;;;124    
;;;125    		CPU_Sn0 = *(__IO uint32_t*)(0x1ffff7e8);
000008  481d              LDR      r0,|L1.128|
00000a  6804              LDR      r4,[r0,#0]
;;;126    		CPU_Sn1 = *(__IO uint32_t*)(0x1ffff7e8 + 4);
00000c  1d00              ADDS     r0,r0,#4
00000e  6805              LDR      r5,[r0,#0]
;;;127    		CPU_Sn2 = *(__IO uint32_t*)(0x1ffff7e8 + 8);
000010  1d00              ADDS     r0,r0,#4
000012  6806              LDR      r6,[r0,#0]
;;;128    
;;;129    		printf("\r\nCPU : STM32F103C8T6, TQFP48, UID = %08X %08X %08X\r\n"
000014  4623              MOV      r3,r4
000016  462a              MOV      r2,r5
000018  4631              MOV      r1,r6
00001a  a01a              ADR      r0,|L1.132|
00001c  f7fffffe          BL       __2printf
;;;130    			, CPU_Sn2, CPU_Sn1, CPU_Sn0);
;;;131    	}
;;;132    	/* 打印ST固件库版本，宏定义在 stm32f4xx.h 文件 */
;;;133    	printf("* 固件库版本 : %d.%d.%d\r\n", __STM32F10X_STDPERIPH_VERSION_MAIN,
000020  2301              MOVS     r3,#1
000022  2206              MOVS     r2,#6
000024  2103              MOVS     r1,#3
000026  a025              ADR      r0,|L1.188|
000028  f7fffffe          BL       __2printf
;;;134    		__STM32F10X_STDPERIPH_VERSION_SUB1, __STM32F10X_STDPERIPH_VERSION_SUB2);
;;;135    
;;;136    	/* 打印 CMSIS 版本. 宏定义在 core_cm4.h 文件 */
;;;137    	printf("* CMSIS版本  : %X.%02X\r\n", __CM3_CMSIS_VERSION_MAIN, __CM3_CMSIS_VERSION_SUB);
00002c  2201              MOVS     r2,#1
00002e  2103              MOVS     r1,#3
000030  a029              ADR      r0,|L1.216|
000032  f7fffffe          BL       __2printf
;;;138    
;;;139    	printf("\r\n*************************************************************\r\n");
000036  482f              LDR      r0,|L1.244|
000038  f7fffffe          BL       __2printf
;;;140    }
00003c  bd70              POP      {r4-r6,pc}
;;;141    
                          ENDP

00003e  0000              DCW      0x0000
                  |L1.64|
000040  2a2a2a2a          DCB      "*******************************************************"
000044  2a2a2a2a
000048  2a2a2a2a
00004c  2a2a2a2a
000050  2a2a2a2a
000054  2a2a2a2a
000058  2a2a2a2a
00005c  2a2a2a2a
000060  2a2a2a2a
000064  2a2a2a2a
000068  2a2a2a2a
00006c  2a2a2a2a
000070  2a2a2a2a
000074  2a2a2a  
000077  2a2a2a2a          DCB      "******\r\n",0
00007b  2a2a0d0a
00007f  00      
                  |L1.128|
                          DCD      0x1ffff7e8
                  |L1.132|
000084  0d0a4350          DCB      "\r\nCPU : STM32F103C8T6, TQFP48, UID = %08X %08X %08X\r"
000088  55203a20
00008c  53544d33
000090  32463130
000094  33433854
000098  362c2054
00009c  51465034
0000a0  382c2055
0000a4  4944203d
0000a8  20253038
0000ac  58202530
0000b0  38582025
0000b4  3038580d
0000b8  0a00              DCB      "\n",0
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L1.188|
0000bc  2a20b9cc          DCB      "* ",185,204,188,254,191,226,176,230,177,190," : %d.%d.%"
0000c0  bcfebfe2
0000c4  b0e6b1be
0000c8  203a2025
0000cc  642e2564
0000d0  2e25    
0000d2  640d0a00          DCB      "d\r\n",0
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L1.216|
0000d8  2a20434d          DCB      "* CMSIS",176,230,177,190,"  : %X.%02X\r\n",0
0000dc  534953b0
0000e0  e6b1be20
0000e4  203a2025
0000e8  582e2530
0000ec  32580d0a
0000f0  00      
0000f1  00                DCB      0
0000f2  00                DCB      0
0000f3  00                DCB      0
                  |L1.244|
                          DCD      ||.conststring||

                          AREA ||i.bsp_Idle||, CODE, READONLY, ALIGN=1

                  bsp_Idle PROC
;;;91     */
;;;92     void bsp_Idle(void)
000000  4770              BX       lr
;;;93     {
;;;94     	/* --- 喂狗 */
;;;95     
;;;96     	/* --- 让CPU进入休眠，由Systick定时中断唤醒或者其他中断唤醒 */
;;;97     
;;;98     	/* 例如 emWin 图形库，可以插入图形库需要的轮询函数 */
;;;99     	//GUI_Exec();
;;;100    
;;;101    	/* 例如 uIP 协议，可以插入uip轮询函数 */
;;;102    
;;;103    
;;;104    }
;;;105    
                          ENDP


                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=1

                  bsp_Init PROC
;;;29     */
;;;30     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;31     {
;;;32     	/*
;;;33     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;34     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;35     
;;;36     		系统时钟缺省配置为72MHz，如果需要更改，可以修改 system_stm32f103.c 文件
;;;37     	*/
;;;38     
;;;39     	/* 优先级分组设置为4 */
;;;40     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
000002  f44f7040          MOV      r0,#0x300
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;41     	
;;;42     //	bsp_InitLed();		/* 配置LED的GPIO端口 */
;;;43     	
;;;44     	bsp_InitKey();		/* 初始化按键 */
00000a  f7fffffe          BL       bsp_InitKey
;;;45     	bsp_InitTimer();	/* 初始化系统滴答定时器 (此函数会开中断) */
00000e  f7fffffe          BL       bsp_InitTimer
;;;46     	bsp_InitUart();		/* 初始化串口驱动 */
000012  f7fffffe          BL       bsp_InitUart
;;;47     	bsp_InitSPIBus();
000016  f7fffffe          BL       bsp_InitSPIBus
;;;48     	bsp_InitAdc();
00001a  f7fffffe          BL       bsp_InitAdc
;;;49     	LCD_Init();
00001e  f7fffffe          BL       LCD_Init
;;;50     	LED_SPI_LowLevel_Init();
000022  f7fffffe          BL       LED_SPI_LowLevel_Init
;;;51     }
000026  bd10              POP      {r4,pc}
;;;52     
                          ENDP


                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer10ms PROC
;;;61     */
;;;62     void bsp_RunPer10ms(void)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64     	bsp_KeyScan();		/* 每10ms扫描按键一次 */
000002  f7fffffe          BL       bsp_KeyScan
;;;65     }
000006  bd10              POP      {r4,pc}
;;;66     
                          ENDP


                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer1ms PROC
;;;76     extern void GT811_Timer1ms(void);
;;;77     void bsp_RunPer1ms(void)
000000  4770              BX       lr
;;;78     {
;;;79     	//bsp_AdcProDMA();
;;;80     	;
;;;81     }
;;;82     
                          ENDP


                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  0d0a2a2a          DCB      "\r\n***************************************************"
000004  2a2a2a2a
000008  2a2a2a2a
00000c  2a2a2a2a
000010  2a2a2a2a
000014  2a2a2a2a
000018  2a2a2a2a
00001c  2a2a2a2a
000020  2a2a2a2a
000024  2a2a2a2a
000028  2a2a2a2a
00002c  2a2a2a2a
000030  2a2a2a2a
000034  2a      
000035  2a2a2a2a          DCB      "**********\r\n",0
000039  2a2a2a2a
00003d  2a2a0d0a
000041  00      

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 128
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
