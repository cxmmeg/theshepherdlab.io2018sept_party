; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\guess.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\guess.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__UVISION_VERSION=526 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\guess.crf ..\..\User\bsp\src\guess.c]
                          THUMB

                          AREA ||i.Init_GUESSNUM||, CODE, READONLY, ALIGN=2

                  Init_GUESSNUM PROC
;;;12     
;;;13     void Init_GUESSNUM(void)
000000  b5fe              PUSH     {r1-r7,lr}
;;;14     {
;;;15     	u16 iSeed = 0;
000002  2600              MOVS     r6,#0
;;;16     	u8 i, j;
;;;17     	LCD_Fill(1, 1, 158, 126, BLACK);
000004  2000              MOVS     r0,#0
000006  237e              MOVS     r3,#0x7e
000008  229e              MOVS     r2,#0x9e
00000a  2101              MOVS     r1,#1
00000c  9000              STR      r0,[sp,#0]
00000e  4608              MOV      r0,r1
000010  f7fffffe          BL       LCD_Fill
;;;18     	LCD_DrawRect(0, 0, 159, 127, GREEN);
000014  f44f60fc          MOV      r0,#0x7e0
000018  237f              MOVS     r3,#0x7f
00001a  229f              MOVS     r2,#0x9f
00001c  2100              MOVS     r1,#0
00001e  9000              STR      r0,[sp,#0]
000020  4608              MOV      r0,r1
000022  f7fffffe          BL       LCD_DrawRect
;;;19     
;;;20     	bsp_ReadCpuFlash(GUESSNUM_ADDR, (uint8_t *)&highsc_temp, 2);
000026  2202              MOVS     r2,#2
000028  4945              LDR      r1,|L1.320|
00002a  4846              LDR      r0,|L1.324|
00002c  f7fffffe          BL       bsp_ReadCpuFlash
;;;21     
;;;22     
;;;23     	LCD_DrawLine(0, 32, 159, 32, GREEN);
000030  f44f60fc          MOV      r0,#0x7e0
000034  2320              MOVS     r3,#0x20
000036  229f              MOVS     r2,#0x9f
000038  4619              MOV      r1,r3
00003a  9000              STR      r0,[sp,#0]
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       LCD_DrawLine
;;;24     	LCD_DrawLine(79, 32, 79, 127, GREEN);
000042  f44f60fc          MOV      r0,#0x7e0
000046  237f              MOVS     r3,#0x7f
000048  224f              MOVS     r2,#0x4f
00004a  2120              MOVS     r1,#0x20
00004c  9000              STR      r0,[sp,#0]
00004e  4610              MOV      r0,r2
000050  f7fffffe          BL       LCD_DrawLine
;;;25     	LCD_setTextColor(WHITE, BLACK);
000054  2100              MOVS     r1,#0
000056  f64f70ff          MOV      r0,#0xffff
00005a  f7fffffe          BL       LCD_setTextColor
;;;26     	LCD_text("       Guess Number       ", 1, 12);
00005e  220c              MOVS     r2,#0xc
000060  2101              MOVS     r1,#1
000062  a039              ADR      r0,|L1.328|
000064  f7fffffe          BL       LCD_text
;;;27     
;;;28     	bsp_ReadCpuFlash(GUESSNUM_ADDR, (uint8_t *)&highsc_temp, 2);
000068  2202              MOVS     r2,#2
00006a  4935              LDR      r1,|L1.320|
00006c  4835              LDR      r0,|L1.324|
00006e  f7fffffe          BL       bsp_ReadCpuFlash
;;;29     
;;;30     	if (highsc_temp == 0xffff)
000072  4833              LDR      r0,|L1.320|
000074  8800              LDRH     r0,[r0,#0]  ; highsc_temp
000076  f64f71ff          MOV      r1,#0xffff
00007a  4288              CMP      r0,r1
00007c  d106              BNE      |L1.140|
;;;31     	{
;;;32     		highsc_temp = 0;
00007e  2000              MOVS     r0,#0
000080  492f              LDR      r1,|L1.320|
000082  8008              STRH     r0,[r1,#0]
;;;33     		bsp_WriteCpuFlash(GUESSNUM_ADDR, (uint8_t *)&highsc_temp, 2);
000084  2202              MOVS     r2,#2
000086  482f              LDR      r0,|L1.324|
000088  f7fffffe          BL       bsp_WriteCpuFlash
                  |L1.140|
;;;34     	}
;;;35     	LCD_text("Tiptop: ", 83, 48);
00008c  2230              MOVS     r2,#0x30
00008e  2153              MOVS     r1,#0x53
000090  a034              ADR      r0,|L1.356|
000092  f7fffffe          BL       LCD_text
;;;36     	display_num_format(131, 48, highsc_temp, 1, "%04d", RED, BLACK);
000096  2000              MOVS     r0,#0
000098  f44f4178          MOV      r1,#0xf800
00009c  a234              ADR      r2,|L1.368|
00009e  2301              MOVS     r3,#1
0000a0  e9cd2100          STRD     r2,r1,[sp,#0]
0000a4  9002              STR      r0,[sp,#8]
0000a6  4826              LDR      r0,|L1.320|
0000a8  8802              LDRH     r2,[r0,#0]  ; highsc_temp
0000aa  2130              MOVS     r1,#0x30
0000ac  2083              MOVS     r0,#0x83
0000ae  f7fffffe          BL       display_num_format
;;;37     	LCD_text("_ _ _ _", 99, 80);
0000b2  2250              MOVS     r2,#0x50
0000b4  2163              MOVS     r1,#0x63
0000b6  a030              ADR      r0,|L1.376|
0000b8  f7fffffe          BL       LCD_text
;;;38     
;;;39     	iSeed = bsp_GetAdc_Average(1);//通过模拟输入获取悬空引脚的电平产生随机种子
0000bc  2001              MOVS     r0,#1
0000be  f7fffffe          BL       bsp_GetAdc_Average
0000c2  4606              MOV      r6,r0
;;;40     	srand(iSeed);
0000c4  4630              MOV      r0,r6
0000c6  f7fffffe          BL       srand
;;;41     	rand_num[0] = (u8)(rand() % 10);//产生随机数0~3
0000ca  f7fffffe          BL       rand
0000ce  210a              MOVS     r1,#0xa
0000d0  fb90f2f1          SDIV     r2,r0,r1
0000d4  fb010012          MLS      r0,r1,r2,r0
0000d8  4929              LDR      r1,|L1.384|
0000da  7008              STRB     r0,[r1,#0]
;;;42     	for (i = 1; i < 4; i++)
0000dc  2401              MOVS     r4,#1
0000de  e01e              B        |L1.286|
                  |L1.224|
;;;43     	{
;;;44     		do
0000e0  bf00              NOP      
                  |L1.226|
;;;45     		{
;;;46     			rand_num[i] = (u8)(rand() % 10);//产生随机数0~3
0000e2  f7fffffe          BL       rand
0000e6  210a              MOVS     r1,#0xa
0000e8  fb90f2f1          SDIV     r2,r0,r1
0000ec  fb010012          MLS      r0,r1,r2,r0
0000f0  4923              LDR      r1,|L1.384|
0000f2  5508              STRB     r0,[r1,r4]
;;;47     			for (j = 0; j < i; j++)
0000f4  2500              MOVS     r5,#0
0000f6  e008              B        |L1.266|
                  |L1.248|
;;;48     			{
;;;49     				if (rand_num[i] == rand_num[j])
0000f8  4821              LDR      r0,|L1.384|
0000fa  5d00              LDRB     r0,[r0,r4]
0000fc  4920              LDR      r1,|L1.384|
0000fe  5d49              LDRB     r1,[r1,r5]
000100  4288              CMP      r0,r1
000102  d100              BNE      |L1.262|
;;;50     				{
;;;51     					break;
000104  e003              B        |L1.270|
                  |L1.262|
000106  1c68              ADDS     r0,r5,#1              ;47
000108  b2c5              UXTB     r5,r0                 ;47
                  |L1.266|
00010a  42a5              CMP      r5,r4                 ;47
00010c  dbf4              BLT      |L1.248|
                  |L1.270|
00010e  bf00              NOP      
;;;52     				}
;;;53     			}
;;;54     			if (j == i) break;
000110  42a5              CMP      r5,r4
000112  d100              BNE      |L1.278|
000114  e000              B        |L1.280|
                  |L1.278|
;;;55     		} while (1);
000116  e7e4              B        |L1.226|
                  |L1.280|
000118  bf00              NOP                            ;54
00011a  1c60              ADDS     r0,r4,#1              ;42
00011c  b2c4              UXTB     r4,r0                 ;42
                  |L1.286|
00011e  2c04              CMP      r4,#4                 ;42
000120  dbde              BLT      |L1.224|
;;;56     	}
;;;57     	n_pos = 0;
000122  2000              MOVS     r0,#0
000124  4917              LDR      r1,|L1.388|
000126  7008              STRB     r0,[r1,#0]
;;;58     	guess_time = 0;
000128  4917              LDR      r1,|L1.392|
00012a  7008              STRB     r0,[r1,#0]
;;;59     	guess[0] = 0x5f;
00012c  205f              MOVS     r0,#0x5f
00012e  4917              LDR      r1,|L1.396|
000130  7008              STRB     r0,[r1,#0]
;;;60     	guess[1] = 0x5f;
000132  7048              STRB     r0,[r1,#1]
;;;61     	guess[2] = 0x5f;
000134  7088              STRB     r0,[r1,#2]
;;;62     	guess[3] = 0x5f;
000136  70c8              STRB     r0,[r1,#3]
;;;63     	guess_flag = 1;
000138  2001              MOVS     r0,#1
00013a  4915              LDR      r1,|L1.400|
00013c  7008              STRB     r0,[r1,#0]
;;;64     }
00013e  bdfe              POP      {r1-r7,pc}
;;;65     
                          ENDP

                  |L1.320|
                          DCD      highsc_temp
                  |L1.324|
                          DCD      0x0800f800
                  |L1.328|
000148  20202020          DCB      "       Guess Number       ",0
00014c  20202047
000150  75657373
000154  204e756d
000158  62657220
00015c  20202020
000160  202000  
000163  00                DCB      0
                  |L1.356|
000164  54697074          DCB      "Tiptop: ",0
000168  6f703a20
00016c  00      
00016d  00                DCB      0
00016e  00                DCB      0
00016f  00                DCB      0
                  |L1.368|
000170  25303464          DCB      "%04d",0
000174  00      
000175  00                DCB      0
000176  00                DCB      0
000177  00                DCB      0
                  |L1.376|
000178  5f205f20          DCB      "_ _ _ _",0
00017c  5f205f00
                  |L1.384|
                          DCD      rand_num
                  |L1.388|
                          DCD      n_pos
                  |L1.392|
                          DCD      guess_time
                  |L1.396|
                          DCD      guess
                  |L1.400|
                          DCD      guess_flag

                          AREA ||i.RUN_GUESS||, CODE, READONLY, ALIGN=2

                  RUN_GUESS PROC
;;;231    
;;;232    void RUN_GUESS(void)
000000  b510              PUSH     {r4,lr}
;;;233    {
;;;234    	if (guess_flag == 0)
000002  4804              LDR      r0,|L2.20|
000004  7800              LDRB     r0,[r0,#0]  ; guess_flag
000006  b910              CBNZ     r0,|L2.14|
;;;235    	{
;;;236    		Init_GUESSNUM();
000008  f7fffffe          BL       Init_GUESSNUM
00000c  e001              B        |L2.18|
                  |L2.14|
;;;237    	}
;;;238    	else
;;;239    	{
;;;240    		guessnum();
00000e  f7fffffe          BL       guessnum
                  |L2.18|
;;;241    	}
;;;242    }
000012  bd10              POP      {r4,pc}
;;;243    
                          ENDP

                  |L2.20|
                          DCD      guess_flag

                          AREA ||i.guessnum||, CODE, READONLY, ALIGN=2

                  guessnum PROC
;;;65     
;;;66     void guessnum(void)
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;67     {
;;;68     	uint8_t countA = 0;
000004  2600              MOVS     r6,#0
;;;69     	uint8_t countB = 0;
000006  2700              MOVS     r7,#0
;;;70     	uint8_t i, j;
;;;71     
;;;72     	if (guess_flag == 1)
000008  48fa              LDR      r0,|L3.1012|
00000a  7800              LDRB     r0,[r0,#0]  ; guess_flag
00000c  2801              CMP      r0,#1
00000e  d147              BNE      |L3.160|
;;;73     	{
;;;74     		Key_Value = bsp_GetKey();
000010  f7fffffe          BL       bsp_GetKey
000014  49f8              LDR      r1,|L3.1016|
000016  7008              STRB     r0,[r1,#0]
;;;75     		if (Key_Value > 0) // check if any button is pressed (enter, up, down, left, right)
000018  4608              MOV      r0,r1
00001a  7800              LDRB     r0,[r0,#0]  ; Key_Value
00001c  2800              CMP      r0,#0
00001e  dd3f              BLE      |L3.160|
;;;76     		{
;;;77     			if (Key_Value == KEY_DOWN_L) // check if button left is pressed
000020  4608              MOV      r0,r1
000022  7800              LDRB     r0,[r0,#0]  ; Key_Value
000024  2813              CMP      r0,#0x13
000026  d13c              BNE      |L3.162|
;;;78     			{
;;;79     				if (n_pos > 0)
000028  48f4              LDR      r0,|L3.1020|
00002a  7800              LDRB     r0,[r0,#0]  ; n_pos
00002c  2800              CMP      r0,#0
00002e  dd31              BLE      |L3.148|
;;;80     				{
;;;81     					guess[n_pos] = 0x5f;
000030  215f              MOVS     r1,#0x5f
000032  48f3              LDR      r0,|L3.1024|
000034  4af1              LDR      r2,|L3.1020|
000036  7812              LDRB     r2,[r2,#0]  ; n_pos
000038  5481              STRB     r1,[r0,r2]
;;;82     					LCD_DrawChar(99 + n_pos * 12, 80, guess[n_pos], WHITE, BLACK, 1);
00003a  2001              MOVS     r0,#1
00003c  2100              MOVS     r1,#0
00003e  e9cd1000          STRD     r1,r0,[sp,#0]
000042  49ef              LDR      r1,|L3.1024|
000044  4bed              LDR      r3,|L3.1020|
000046  781b              LDRB     r3,[r3,#0]  ; n_pos
000048  5cca              LDRB     r2,[r1,r3]
00004a  49ec              LDR      r1,|L3.1020|
00004c  7809              LDRB     r1,[r1,#0]  ; n_pos
00004e  eb010141          ADD      r1,r1,r1,LSL #1
000052  2363              MOVS     r3,#0x63
000054  eb030081          ADD      r0,r3,r1,LSL #2
000058  f64f73ff          MOV      r3,#0xffff
00005c  2150              MOVS     r1,#0x50
00005e  f7fffffe          BL       LCD_DrawChar
;;;83     					n_pos--;
000062  48e6              LDR      r0,|L3.1020|
000064  7800              LDRB     r0,[r0,#0]  ; n_pos
000066  1e40              SUBS     r0,r0,#1
000068  49e4              LDR      r1,|L3.1020|
00006a  7008              STRB     r0,[r1,#0]
;;;84     					LCD_DrawChar(99 + n_pos * 12, 80, guess[n_pos], RED, BLACK, 1);
00006c  2001              MOVS     r0,#1
00006e  2100              MOVS     r1,#0
000070  e9cd1000          STRD     r1,r0,[sp,#0]
000074  49e2              LDR      r1,|L3.1024|
000076  4be1              LDR      r3,|L3.1020|
000078  781b              LDRB     r3,[r3,#0]  ; n_pos
00007a  5cca              LDRB     r2,[r1,r3]
00007c  49df              LDR      r1,|L3.1020|
00007e  7809              LDRB     r1,[r1,#0]  ; n_pos
000080  eb010141          ADD      r1,r1,r1,LSL #1
000084  2363              MOVS     r3,#0x63
000086  eb030081          ADD      r0,r3,r1,LSL #2
00008a  f44f4378          MOV      r3,#0xf800
00008e  2150              MOVS     r1,#0x50
000090  f7fffffe          BL       LCD_DrawChar
                  |L3.148|
;;;85     					//if (n_pos == 0)
;;;86     					//{
;;;87     					//	LCD_DrawChar(14 + n_pos * 6, 80, pwd[n_pos], RED, BLACK, 1);
;;;88     					//}
;;;89     				}
;;;90     				Key_V_temp = KEY_DOWN_L;
000094  2013              MOVS     r0,#0x13
000096  49db              LDR      r1,|L3.1028|
000098  7008              STRB     r0,[r1,#0]
;;;91     
;;;92     				Key_Value = 0;
00009a  2000              MOVS     r0,#0
00009c  49d6              LDR      r1,|L3.1016|
00009e  7008              STRB     r0,[r1,#0]
                  |L3.160|
0000a0  e1f8              B        |L3.1172|
                  |L3.162|
;;;93     			}
;;;94     			else if (Key_Value == KEY_DOWN_R) // check if button left is pressed
0000a2  48d5              LDR      r0,|L3.1016|
0000a4  7800              LDRB     r0,[r0,#0]  ; Key_Value
0000a6  2816              CMP      r0,#0x16
0000a8  d137              BNE      |L3.282|
;;;95     			{
;;;96     				if (n_pos < 4)
0000aa  48d4              LDR      r0,|L3.1020|
0000ac  7800              LDRB     r0,[r0,#0]  ; n_pos
0000ae  2804              CMP      r0,#4
0000b0  da2c              BGE      |L3.268|
;;;97     				{
;;;98     					//if (n_pos == 0)
;;;99     					//{
;;;100    					//	LCD_DrawChar(14 + n_pos * 6, 80, pwd[n_pos], RED, BLACK, 1);
;;;101    					//}
;;;102    					LCD_DrawChar(99 + n_pos * 12, 80, guess[n_pos], WHITE, BLACK, 1);
0000b2  2001              MOVS     r0,#1
0000b4  2100              MOVS     r1,#0
0000b6  e9cd1000          STRD     r1,r0,[sp,#0]
0000ba  49d1              LDR      r1,|L3.1024|
0000bc  4bcf              LDR      r3,|L3.1020|
0000be  781b              LDRB     r3,[r3,#0]  ; n_pos
0000c0  5cca              LDRB     r2,[r1,r3]
0000c2  49ce              LDR      r1,|L3.1020|
0000c4  7809              LDRB     r1,[r1,#0]  ; n_pos
0000c6  eb010141          ADD      r1,r1,r1,LSL #1
0000ca  2363              MOVS     r3,#0x63
0000cc  eb030081          ADD      r0,r3,r1,LSL #2
0000d0  f64f73ff          MOV      r3,#0xffff
0000d4  2150              MOVS     r1,#0x50
0000d6  f7fffffe          BL       LCD_DrawChar
;;;103    					n_pos++;
0000da  48c8              LDR      r0,|L3.1020|
0000dc  7800              LDRB     r0,[r0,#0]  ; n_pos
0000de  1c40              ADDS     r0,r0,#1
0000e0  49c6              LDR      r1,|L3.1020|
0000e2  7008              STRB     r0,[r1,#0]
;;;104    					LCD_DrawChar(99 + n_pos * 12, 80, guess[n_pos], RED, BLACK, 1);
0000e4  2001              MOVS     r0,#1
0000e6  2100              MOVS     r1,#0
0000e8  e9cd1000          STRD     r1,r0,[sp,#0]
0000ec  49c4              LDR      r1,|L3.1024|
0000ee  4bc3              LDR      r3,|L3.1020|
0000f0  781b              LDRB     r3,[r3,#0]  ; n_pos
0000f2  5cca              LDRB     r2,[r1,r3]
0000f4  49c1              LDR      r1,|L3.1020|
0000f6  7809              LDRB     r1,[r1,#0]  ; n_pos
0000f8  eb010141          ADD      r1,r1,r1,LSL #1
0000fc  2363              MOVS     r3,#0x63
0000fe  eb030081          ADD      r0,r3,r1,LSL #2
000102  f44f4378          MOV      r3,#0xf800
000106  2150              MOVS     r1,#0x50
000108  f7fffffe          BL       LCD_DrawChar
                  |L3.268|
;;;105    				}
;;;106    				Key_V_temp = KEY_DOWN_R;
00010c  2016              MOVS     r0,#0x16
00010e  49bd              LDR      r1,|L3.1028|
000110  7008              STRB     r0,[r1,#0]
;;;107    
;;;108    				Key_Value = 0;
000112  2000              MOVS     r0,#0
000114  49b8              LDR      r1,|L3.1016|
000116  7008              STRB     r0,[r1,#0]
000118  e1bc              B        |L3.1172|
                  |L3.282|
;;;109    			}
;;;110    			else if (Key_Value == KEY_DOWN_U)
00011a  48b7              LDR      r0,|L3.1016|
00011c  7800              LDRB     r0,[r0,#0]  ; Key_Value
00011e  280d              CMP      r0,#0xd
000120  d140              BNE      |L3.420|
;;;111    			{
;;;112    				if ((guess[n_pos] > 0x39) || (guess[n_pos] < 0x30))
000122  48b7              LDR      r0,|L3.1024|
000124  49b5              LDR      r1,|L3.1020|
000126  7809              LDRB     r1,[r1,#0]  ; n_pos
000128  5c40              LDRB     r0,[r0,r1]
00012a  2839              CMP      r0,#0x39
00012c  dc05              BGT      |L3.314|
00012e  48b4              LDR      r0,|L3.1024|
000130  49b2              LDR      r1,|L3.1020|
000132  7809              LDRB     r1,[r1,#0]  ; n_pos
000134  5c40              LDRB     r0,[r0,r1]
000136  2830              CMP      r0,#0x30
000138  da05              BGE      |L3.326|
                  |L3.314|
;;;113    				{
;;;114    					guess[n_pos] = 0x3A;
00013a  213a              MOVS     r1,#0x3a
00013c  48b0              LDR      r0,|L3.1024|
00013e  4aaf              LDR      r2,|L3.1020|
000140  7812              LDRB     r2,[r2,#0]  ; n_pos
000142  5481              STRB     r1,[r0,r2]
000144  e00a              B        |L3.348|
                  |L3.326|
;;;115    				}
;;;116    				else if (guess[n_pos] == 0x30)
000146  48ae              LDR      r0,|L3.1024|
000148  49ac              LDR      r1,|L3.1020|
00014a  7809              LDRB     r1,[r1,#0]  ; n_pos
00014c  5c40              LDRB     r0,[r0,r1]
00014e  2830              CMP      r0,#0x30
000150  d104              BNE      |L3.348|
;;;117    				{
;;;118    					guess[n_pos] = 0x3A;
000152  213a              MOVS     r1,#0x3a
000154  48aa              LDR      r0,|L3.1024|
000156  4aa9              LDR      r2,|L3.1020|
000158  7812              LDRB     r2,[r2,#0]  ; n_pos
00015a  5481              STRB     r1,[r0,r2]
                  |L3.348|
;;;119    				}
;;;120    				guess[n_pos]--;
00015c  48a8              LDR      r0,|L3.1024|
00015e  49a7              LDR      r1,|L3.1020|
000160  7809              LDRB     r1,[r1,#0]  ; n_pos
000162  5c40              LDRB     r0,[r0,r1]
000164  1e40              SUBS     r0,r0,#1
000166  49a6              LDR      r1,|L3.1024|
000168  4aa4              LDR      r2,|L3.1020|
00016a  7812              LDRB     r2,[r2,#0]  ; n_pos
00016c  5488              STRB     r0,[r1,r2]
;;;121    
;;;122    				LCD_DrawChar(99 + n_pos * 12, 80, guess[n_pos], RED, BLACK, 1);
00016e  2001              MOVS     r0,#1
000170  2100              MOVS     r1,#0
000172  e9cd1000          STRD     r1,r0,[sp,#0]
000176  49a2              LDR      r1,|L3.1024|
000178  4ba0              LDR      r3,|L3.1020|
00017a  781b              LDRB     r3,[r3,#0]  ; n_pos
00017c  5cca              LDRB     r2,[r1,r3]
00017e  499f              LDR      r1,|L3.1020|
000180  7809              LDRB     r1,[r1,#0]  ; n_pos
000182  eb010141          ADD      r1,r1,r1,LSL #1
000186  2363              MOVS     r3,#0x63
000188  eb030081          ADD      r0,r3,r1,LSL #2
00018c  f44f4378          MOV      r3,#0xf800
000190  2150              MOVS     r1,#0x50
000192  f7fffffe          BL       LCD_DrawChar
;;;123    				Key_V_temp = KEY_DOWN_U;
000196  200d              MOVS     r0,#0xd
000198  499a              LDR      r1,|L3.1028|
00019a  7008              STRB     r0,[r1,#0]
;;;124    
;;;125    				Key_Value = 0;
00019c  2000              MOVS     r0,#0
00019e  4996              LDR      r1,|L3.1016|
0001a0  7008              STRB     r0,[r1,#0]
0001a2  e177              B        |L3.1172|
                  |L3.420|
;;;126    			}
;;;127    			else if (Key_Value == KEY_DOWN_D)
0001a4  4894              LDR      r0,|L3.1016|
0001a6  7800              LDRB     r0,[r0,#0]  ; Key_Value
0001a8  2810              CMP      r0,#0x10
0001aa  d141              BNE      |L3.560|
;;;128    			{
;;;129    				if ((guess[n_pos] > 0x39) || (guess[n_pos] < 0x30))
0001ac  4894              LDR      r0,|L3.1024|
0001ae  4993              LDR      r1,|L3.1020|
0001b0  7809              LDRB     r1,[r1,#0]  ; n_pos
0001b2  5c40              LDRB     r0,[r0,r1]
0001b4  2839              CMP      r0,#0x39
0001b6  dc05              BGT      |L3.452|
0001b8  4891              LDR      r0,|L3.1024|
0001ba  4990              LDR      r1,|L3.1020|
0001bc  7809              LDRB     r1,[r1,#0]  ; n_pos
0001be  5c40              LDRB     r0,[r0,r1]
0001c0  2830              CMP      r0,#0x30
0001c2  da05              BGE      |L3.464|
                  |L3.452|
;;;130    				{
;;;131    					guess[n_pos] = 0x2F;
0001c4  202f              MOVS     r0,#0x2f
0001c6  498e              LDR      r1,|L3.1024|
0001c8  4a8c              LDR      r2,|L3.1020|
0001ca  7812              LDRB     r2,[r2,#0]  ; n_pos
0001cc  5488              STRB     r0,[r1,r2]
0001ce  e00a              B        |L3.486|
                  |L3.464|
;;;132    				}
;;;133    				else if (guess[n_pos] == 0x39)
0001d0  488b              LDR      r0,|L3.1024|
0001d2  498a              LDR      r1,|L3.1020|
0001d4  7809              LDRB     r1,[r1,#0]  ; n_pos
0001d6  5c40              LDRB     r0,[r0,r1]
0001d8  2839              CMP      r0,#0x39
0001da  d104              BNE      |L3.486|
;;;134    				{
;;;135    					guess[n_pos] = 0x2F;
0001dc  202f              MOVS     r0,#0x2f
0001de  4988              LDR      r1,|L3.1024|
0001e0  4a86              LDR      r2,|L3.1020|
0001e2  7812              LDRB     r2,[r2,#0]  ; n_pos
0001e4  5488              STRB     r0,[r1,r2]
                  |L3.486|
;;;136    				}
;;;137    				guess[n_pos]++;
0001e6  4886              LDR      r0,|L3.1024|
0001e8  4984              LDR      r1,|L3.1020|
0001ea  7809              LDRB     r1,[r1,#0]  ; n_pos
0001ec  5c40              LDRB     r0,[r0,r1]
0001ee  1c40              ADDS     r0,r0,#1
0001f0  b2c1              UXTB     r1,r0
0001f2  4883              LDR      r0,|L3.1024|
0001f4  4a81              LDR      r2,|L3.1020|
0001f6  7812              LDRB     r2,[r2,#0]  ; n_pos
0001f8  5481              STRB     r1,[r0,r2]
;;;138    
;;;139    				LCD_DrawChar(99 + n_pos * 12, 80, guess[n_pos], RED, BLACK, 1);
0001fa  2001              MOVS     r0,#1
0001fc  2100              MOVS     r1,#0
0001fe  e9cd1000          STRD     r1,r0,[sp,#0]
000202  497f              LDR      r1,|L3.1024|
000204  4b7d              LDR      r3,|L3.1020|
000206  781b              LDRB     r3,[r3,#0]  ; n_pos
000208  5cca              LDRB     r2,[r1,r3]
00020a  497c              LDR      r1,|L3.1020|
00020c  7809              LDRB     r1,[r1,#0]  ; n_pos
00020e  eb010141          ADD      r1,r1,r1,LSL #1
000212  2363              MOVS     r3,#0x63
000214  eb030081          ADD      r0,r3,r1,LSL #2
000218  f44f4378          MOV      r3,#0xf800
00021c  2150              MOVS     r1,#0x50
00021e  f7fffffe          BL       LCD_DrawChar
;;;140    				Key_V_temp = KEY_DOWN_D;
000222  2010              MOVS     r0,#0x10
000224  4977              LDR      r1,|L3.1028|
000226  7008              STRB     r0,[r1,#0]
;;;141    
;;;142    				Key_Value = 0;
000228  2000              MOVS     r0,#0
00022a  4973              LDR      r1,|L3.1016|
00022c  7008              STRB     r0,[r1,#0]
00022e  e131              B        |L3.1172|
                  |L3.560|
;;;143    			}
;;;144    			else if (Key_Value == KEY_DOWN_A)
000230  4871              LDR      r0,|L3.1016|
000232  7800              LDRB     r0,[r0,#0]  ; Key_Value
000234  2801              CMP      r0,#1
000236  d171              BNE      |L3.796|
;;;145    			{
;;;146    				u8 t_flag = 0;
000238  f04f0800          MOV      r8,#0
;;;147    
;;;148    				for (i = 0; i < 4; i++)
00023c  2400              MOVS     r4,#0
00023e  e012              B        |L3.614|
                  |L3.576|
;;;149    				{
;;;150    					for (j = i + 1; j < 4; j++)
000240  1c60              ADDS     r0,r4,#1
000242  b2c5              UXTB     r5,r0
000244  e00a              B        |L3.604|
                  |L3.582|
;;;151    					{
;;;152    						if (guess[i] == guess[j])
000246  486e              LDR      r0,|L3.1024|
000248  5d00              LDRB     r0,[r0,r4]
00024a  496d              LDR      r1,|L3.1024|
00024c  5d49              LDRB     r1,[r1,r5]
00024e  4288              CMP      r0,r1
000250  d102              BNE      |L3.600|
;;;153    						{
;;;154    							t_flag = 1;
000252  f04f0801          MOV      r8,#1
;;;155    							break;
000256  e003              B        |L3.608|
                  |L3.600|
000258  1c68              ADDS     r0,r5,#1              ;150
00025a  b2c5              UXTB     r5,r0                 ;150
                  |L3.604|
00025c  2d04              CMP      r5,#4                 ;150
00025e  dbf2              BLT      |L3.582|
                  |L3.608|
000260  bf00              NOP      
000262  1c60              ADDS     r0,r4,#1              ;148
000264  b2c4              UXTB     r4,r0                 ;148
                  |L3.614|
000266  2c04              CMP      r4,#4                 ;148
000268  dbea              BLT      |L3.576|
;;;156    						}
;;;157    					}
;;;158    				}
;;;159    				if (t_flag == 0)
00026a  f1b80f00          CMP      r8,#0
00026e  d154              BNE      |L3.794|
;;;160    				{
;;;161    
;;;162    					for (i = 0; i < 4; i++)
000270  2400              MOVS     r4,#0
000272  e015              B        |L3.672|
                  |L3.628|
;;;163    					{
;;;164    						for (j = 0; j < 4; j++)
000274  2500              MOVS     r5,#0
000276  e00f              B        |L3.664|
                  |L3.632|
;;;165    						{
;;;166    							if (guess[j] == rand_num[i] + 0x30)
000278  4861              LDR      r0,|L3.1024|
00027a  5d41              LDRB     r1,[r0,r5]
00027c  4862              LDR      r0,|L3.1032|
00027e  5d00              LDRB     r0,[r0,r4]
000280  3030              ADDS     r0,r0,#0x30
000282  4281              CMP      r1,r0
000284  d106              BNE      |L3.660|
;;;167    							{
;;;168    								if (j == i)
000286  42a5              CMP      r5,r4
000288  d102              BNE      |L3.656|
;;;169    								{
;;;170    									countA++;
00028a  1c70              ADDS     r0,r6,#1
00028c  b2c6              UXTB     r6,r0
00028e  e001              B        |L3.660|
                  |L3.656|
;;;171    								}
;;;172    								else
;;;173    								{
;;;174    									countB++;
000290  1c78              ADDS     r0,r7,#1
000292  b2c7              UXTB     r7,r0
                  |L3.660|
000294  1c68              ADDS     r0,r5,#1              ;164
000296  b2c5              UXTB     r5,r0                 ;164
                  |L3.664|
000298  2d04              CMP      r5,#4                 ;164
00029a  dbed              BLT      |L3.632|
00029c  1c60              ADDS     r0,r4,#1              ;162
00029e  b2c4              UXTB     r4,r0                 ;162
                  |L3.672|
0002a0  2c04              CMP      r4,#4                 ;162
0002a2  dbe7              BLT      |L3.628|
;;;175    								}
;;;176    							}
;;;177    						}
;;;178    					}
;;;179    
;;;180    					if (guess_time < 8)
0002a4  4859              LDR      r0,|L3.1036|
0002a6  7800              LDRB     r0,[r0,#0]  ; guess_time
0002a8  2808              CMP      r0,#8
0002aa  da70              BGE      |L3.910|
;;;181    					{
;;;182    						if (countA == 4)
0002ac  2e04              CMP      r6,#4
0002ae  d136              BNE      |L3.798|
;;;183    						{
;;;184    							LCD_Fill(1, 33, 158, 126, BLACK);
0002b0  2000              MOVS     r0,#0
0002b2  237e              MOVS     r3,#0x7e
0002b4  229e              MOVS     r2,#0x9e
0002b6  2121              MOVS     r1,#0x21
0002b8  9000              STR      r0,[sp,#0]
0002ba  2001              MOVS     r0,#1
0002bc  f7fffffe          BL       LCD_Fill
;;;185    							LCD_setTextColor(WHITE, BLACK);
0002c0  2100              MOVS     r1,#0
0002c2  f64f70ff          MOV      r0,#0xffff
0002c6  f7fffffe          BL       LCD_setTextColor
;;;186    							LCD_text("     Congratulation!      ", 1, 48);
0002ca  2230              MOVS     r2,#0x30
0002cc  2101              MOVS     r1,#1
0002ce  a050              ADR      r0,|L3.1040|
0002d0  f7fffffe          BL       LCD_text
;;;187    							highsc_temp++;
0002d4  4855              LDR      r0,|L3.1068|
0002d6  8800              LDRH     r0,[r0,#0]  ; highsc_temp
0002d8  1c40              ADDS     r0,r0,#1
0002da  4954              LDR      r1,|L3.1068|
0002dc  8008              STRH     r0,[r1,#0]
;;;188    							bsp_WriteCpuFlash(GUESSNUM_ADDR, (uint8_t *)&highsc_temp, 2);
0002de  2202              MOVS     r2,#2
0002e0  4853              LDR      r0,|L3.1072|
0002e2  f7fffffe          BL       bsp_WriteCpuFlash
;;;189    							LCD_text("     Tiptop: ", 11, 80);
0002e6  2250              MOVS     r2,#0x50
0002e8  210b              MOVS     r1,#0xb
0002ea  a052              ADR      r0,|L3.1076|
0002ec  f7fffffe          BL       LCD_text
;;;190    							display_num_format(89, 80, highsc_temp, 1, "%04d", RED, BLACK);
0002f0  2000              MOVS     r0,#0
0002f2  f44f4178          MOV      r1,#0xf800
0002f6  a253              ADR      r2,|L3.1092|
0002f8  2301              MOVS     r3,#1
0002fa  e9cd2100          STRD     r2,r1,[sp,#0]
0002fe  9002              STR      r0,[sp,#8]
000300  484a              LDR      r0,|L3.1068|
000302  8802              LDRH     r2,[r0,#0]  ; highsc_temp
000304  2150              MOVS     r1,#0x50
000306  2059              MOVS     r0,#0x59
000308  f7fffffe          BL       display_num_format
;;;191    							bsp_DelayMS(3000);
00030c  f64030b8          MOV      r0,#0xbb8
000310  f7fffffe          BL       bsp_DelayMS
;;;192    							guess_flag = 0;
000314  2000              MOVS     r0,#0
000316  4937              LDR      r1,|L3.1012|
000318  7008              STRB     r0,[r1,#0]
                  |L3.794|
00031a  e064              B        |L3.998|
                  |L3.796|
00031c  e0a8              B        |L3.1136|
                  |L3.798|
;;;193    							//LCDML.OTHER_jumpToFunc(mFunc_guess_num);
;;;194    						}
;;;195    						else
;;;196    						{
;;;197    							LCD_text("  A   B", 16, 40 + 10 * guess_time);
00031e  483b              LDR      r0,|L3.1036|
000320  7800              LDRB     r0,[r0,#0]  ; guess_time
000322  eb000080          ADD      r0,r0,r0,LSL #2
000326  0040              LSLS     r0,r0,#1
000328  f1000228          ADD      r2,r0,#0x28
00032c  2110              MOVS     r1,#0x10
00032e  a047              ADR      r0,|L3.1100|
000330  f7fffffe          BL       LCD_text
;;;198    							LCD_DrawChar(16, 40 + 10 * guess_time, countA + 0x30, RED, BLACK, 1);
000334  2001              MOVS     r0,#1
000336  2100              MOVS     r1,#0
000338  e9cd1000          STRD     r1,r0,[sp,#0]
00033c  f1060030          ADD      r0,r6,#0x30
000340  b2c2              UXTB     r2,r0
000342  4832              LDR      r0,|L3.1036|
000344  7800              LDRB     r0,[r0,#0]  ; guess_time
000346  eb000080          ADD      r0,r0,r0,LSL #2
00034a  0040              LSLS     r0,r0,#1
00034c  f1000128          ADD      r1,r0,#0x28
000350  f44f4378          MOV      r3,#0xf800
000354  2010              MOVS     r0,#0x10
000356  f7fffffe          BL       LCD_DrawChar
;;;199    							LCD_DrawChar(16 + 24, 40 + 10 * guess_time, countB + 0x30, RED, BLACK, 1);
00035a  2001              MOVS     r0,#1
00035c  2100              MOVS     r1,#0
00035e  e9cd1000          STRD     r1,r0,[sp,#0]
000362  f1070030          ADD      r0,r7,#0x30
000366  b2c2              UXTB     r2,r0
000368  4828              LDR      r0,|L3.1036|
00036a  7800              LDRB     r0,[r0,#0]  ; guess_time
00036c  eb000080          ADD      r0,r0,r0,LSL #2
000370  0040              LSLS     r0,r0,#1
000372  f1000128          ADD      r1,r0,#0x28
000376  f44f4378          MOV      r3,#0xf800
00037a  2028              MOVS     r0,#0x28
00037c  f7fffffe          BL       LCD_DrawChar
;;;200    							guess_time++;
000380  4822              LDR      r0,|L3.1036|
000382  7800              LDRB     r0,[r0,#0]  ; guess_time
000384  1c40              ADDS     r0,r0,#1
000386  4921              LDR      r1,|L3.1036|
000388  7008              STRB     r0,[r1,#0]
00038a  e02c              B        |L3.998|
00038c  e7ff              B        |L3.910|
                  |L3.910|
;;;201    						}
;;;202    
;;;203    					}
;;;204    					else
;;;205    					{
;;;206    						LCD_Fill(1, 33, 158, 126, BLACK);
00038e  2000              MOVS     r0,#0
000390  237e              MOVS     r3,#0x7e
000392  229e              MOVS     r2,#0x9e
000394  2121              MOVS     r1,#0x21
000396  9000              STR      r0,[sp,#0]
000398  2001              MOVS     r0,#1
00039a  f7fffffe          BL       LCD_Fill
;;;207    						LCD_setTextColor(WHITE, BLACK);
00039e  2100              MOVS     r1,#0
0003a0  f64f70ff          MOV      r0,#0xffff
0003a4  f7fffffe          BL       LCD_setTextColor
;;;208    						LCD_text("       Game Over !        ", 1, 48);
0003a8  2230              MOVS     r2,#0x30
0003aa  2101              MOVS     r1,#1
0003ac  a029              ADR      r0,|L3.1108|
0003ae  f7fffffe          BL       LCD_text
;;;209    						LCD_text("     Tiptop: ", 11, 80);
0003b2  2250              MOVS     r2,#0x50
0003b4  210b              MOVS     r1,#0xb
0003b6  a01f              ADR      r0,|L3.1076|
0003b8  f7fffffe          BL       LCD_text
;;;210    						display_num_format(89, 80, highsc_temp, 1, "%04d", RED, BLACK);
0003bc  2000              MOVS     r0,#0
0003be  f44f4178          MOV      r1,#0xf800
0003c2  a220              ADR      r2,|L3.1092|
0003c4  2301              MOVS     r3,#1
0003c6  e9cd2100          STRD     r2,r1,[sp,#0]
0003ca  9002              STR      r0,[sp,#8]
0003cc  4817              LDR      r0,|L3.1068|
0003ce  8802              LDRH     r2,[r0,#0]  ; highsc_temp
0003d0  2150              MOVS     r1,#0x50
0003d2  2059              MOVS     r0,#0x59
0003d4  f7fffffe          BL       display_num_format
;;;211    						bsp_DelayMS(3000);
0003d8  f64030b8          MOV      r0,#0xbb8
0003dc  f7fffffe          BL       bsp_DelayMS
;;;212    						guess_flag = 0;
0003e0  2000              MOVS     r0,#0
0003e2  4904              LDR      r1,|L3.1012|
0003e4  7008              STRB     r0,[r1,#0]
                  |L3.998|
;;;213    						//LCDML.FUNC_goBackToMenu();
;;;214    					}
;;;215    				}
;;;216    				Key_V_temp = KEY_DOWN_A;
0003e6  2001              MOVS     r0,#1
0003e8  4906              LDR      r1,|L3.1028|
0003ea  7008              STRB     r0,[r1,#0]
;;;217    
;;;218    				Key_Value = 0;
0003ec  2000              MOVS     r0,#0
0003ee  4902              LDR      r1,|L3.1016|
0003f0  7008              STRB     r0,[r1,#0]
;;;219    			}
0003f2  e04f              B        |L3.1172|
                  |L3.1012|
                          DCD      guess_flag
                  |L3.1016|
                          DCD      Key_Value
                  |L3.1020|
                          DCD      n_pos
                  |L3.1024|
                          DCD      guess
                  |L3.1028|
                          DCD      Key_V_temp
                  |L3.1032|
                          DCD      rand_num
                  |L3.1036|
                          DCD      guess_time
                  |L3.1040|
000410  20202020          DCB      "     Congratulation!      ",0
000414  20436f6e
000418  67726174
00041c  756c6174
000420  696f6e21
000424  20202020
000428  202000  
00042b  00                DCB      0
                  |L3.1068|
                          DCD      highsc_temp
                  |L3.1072|
                          DCD      0x0800f800
                  |L3.1076|
000434  20202020          DCB      "     Tiptop: ",0
000438  20546970
00043c  746f703a
000440  2000    
000442  00                DCB      0
000443  00                DCB      0
                  |L3.1092|
000444  25303464          DCB      "%04d",0
000448  00      
000449  00                DCB      0
00044a  00                DCB      0
00044b  00                DCB      0
                  |L3.1100|
00044c  20204120          DCB      "  A   B",0
000450  20204200
                  |L3.1108|
000454  20202020          DCB      "       Game Over !        ",0
000458  20202047
00045c  616d6520
000460  4f766572
000464  20212020
000468  20202020
00046c  202000  
00046f  00                DCB      0
                  |L3.1136|
;;;220    			else if (Key_Value == KEY_DOWN_B) // check if button left is pressed
000470  4809              LDR      r0,|L3.1176|
000472  7800              LDRB     r0,[r0,#0]  ; Key_Value
000474  2804              CMP      r0,#4
000476  d10d              BNE      |L3.1172|
;;;221    			{
;;;222    				LCD_Clear(BLACK);
000478  2000              MOVS     r0,#0
00047a  f7fffffe          BL       LCD_Clear
;;;223    				game_sel = 0;
00047e  2000              MOVS     r0,#0
000480  4906              LDR      r1,|L3.1180|
000482  7008              STRB     r0,[r1,#0]
;;;224    				guess_flag = 0;
000484  4906              LDR      r1,|L3.1184|
000486  7008              STRB     r0,[r1,#0]
;;;225    				Key_V_temp = KEY_DOWN_B;
000488  2004              MOVS     r0,#4
00048a  4906              LDR      r1,|L3.1188|
00048c  7008              STRB     r0,[r1,#0]
;;;226    				Key_Value = 0;
00048e  2000              MOVS     r0,#0
000490  4901              LDR      r1,|L3.1176|
000492  7008              STRB     r0,[r1,#0]
                  |L3.1172|
;;;227    			}
;;;228    		}
;;;229    	}
;;;230    }
000494  e8bd83fe          POP      {r1-r9,pc}
;;;231    
                          ENDP

                  |L3.1176|
                          DCD      Key_Value
                  |L3.1180|
                          DCD      game_sel
                  |L3.1184|
                          DCD      guess_flag
                  |L3.1188|
                          DCD      Key_V_temp

                          AREA ||.data||, DATA, ALIGN=1

                  n_pos
000000  0000              DCB      0x00,0x00
                  highsc_temp
000002  0000              DCW      0x0000
                  guess
000004  5f5f5f5f          DCB      0x5f,0x5f,0x5f,0x5f
                  rand_num
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  guess_time
00000c  00                DCB      0x00
                  guess_flag
00000d  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\guess.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_guess_c_9351d6b5____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_guess_c_9351d6b5____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_guess_c_9351d6b5____REVSH|
#line 128
|__asm___7_guess_c_9351d6b5____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
