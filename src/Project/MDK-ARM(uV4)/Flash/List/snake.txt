; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\snake.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\snake.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__UVISION_VERSION=526 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\snake.crf ..\..\User\bsp\src\snake.c]
                          THUMB

                          AREA ||i.Display_Pass||, CODE, READONLY, ALIGN=2

                  Display_Pass PROC
;;;129    //=================================================================
;;;130    void Display_Pass(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;131    {
;;;132    	Snake.Level++;
000002  483e              LDR      r0,|L1.252|
000004  7dc0              LDRB     r0,[r0,#0x17]  ; Snake
000006  1c40              ADDS     r0,r0,#1
000008  493c              LDR      r1,|L1.252|
00000a  75c8              STRB     r0,[r1,#0x17]
;;;133    	if (Snake.Level >= 21)
00000c  4608              MOV      r0,r1
00000e  7dc0              LDRB     r0,[r0,#0x17]  ; Snake
000010  2815              CMP      r0,#0x15
000012  db0f              BLT      |L1.52|
;;;134    	{
;;;135    		while (1)
000014  e00d              B        |L1.50|
                  |L1.22|
;;;136    		{
;;;137    			LCD_Clear(WHITE);
000016  f64f70ff          MOV      r0,#0xffff
00001a  f7fffffe          BL       LCD_Clear
;;;138    			LCD_setTextColor(RED, BLACK);
00001e  2100              MOVS     r1,#0
000020  f44f4078          MOV      r0,#0xf800
000024  f7fffffe          BL       LCD_setTextColor
;;;139    			LCD_text("YOU ARE WIN!", 44, 48);
000028  2230              MOVS     r2,#0x30
00002a  212c              MOVS     r1,#0x2c
00002c  a034              ADR      r0,|L1.256|
00002e  f7fffffe          BL       LCD_text
                  |L1.50|
000032  e7f0              B        |L1.22|
                  |L1.52|
;;;140    			//LCD_ShowString(30, 90, 200, 16, 16, "YOU ARE WIN!!!");
;;;141    		}
;;;142    	}
;;;143    	LCD_Clear(BLACK);
000034  2000              MOVS     r0,#0
000036  f7fffffe          BL       LCD_Clear
;;;144    
;;;145    	LCD_DrawRect(0, 0, 159, 127, DARKBLUE);
00003a  f24010cf          MOV      r0,#0x1cf
00003e  237f              MOVS     r3,#0x7f
000040  229f              MOVS     r2,#0x9f
000042  2100              MOVS     r1,#0
000044  9000              STR      r0,[sp,#0]
000046  4608              MOV      r0,r1
000048  f7fffffe          BL       LCD_DrawRect
;;;146    	LCD_DrawLine(0, 11, 159, 11, DARKBLUE);
00004c  f24010cf          MOV      r0,#0x1cf
000050  230b              MOVS     r3,#0xb
000052  229f              MOVS     r2,#0x9f
000054  4619              MOV      r1,r3
000056  9000              STR      r0,[sp,#0]
000058  2000              MOVS     r0,#0
00005a  f7fffffe          BL       LCD_DrawLine
;;;147    
;;;148    	LCD_setTextColor(WHITE, BLACK);
00005e  2100              MOVS     r1,#0
000060  f64f70ff          MOV      r0,#0xffff
000064  f7fffffe          BL       LCD_setTextColor
;;;149    	LCD_text("LEVEL:", 4, 3);
000068  2203              MOVS     r2,#3
00006a  2104              MOVS     r1,#4
00006c  a028              ADR      r0,|L1.272|
00006e  f7fffffe          BL       LCD_text
;;;150    	LCD_text("Score:", 80, 3);
000072  2203              MOVS     r2,#3
000074  2150              MOVS     r1,#0x50
000076  a028              ADR      r0,|L1.280|
000078  f7fffffe          BL       LCD_text
;;;151    	LCD_setTextColor(RED, BLACK);
00007c  2100              MOVS     r1,#0
00007e  f44f4078          MOV      r0,#0xf800
000082  f7fffffe          BL       LCD_setTextColor
;;;152    	display_num_format(40, 3, (u32)Snake.Level, 1, "%d", RED, BLACK);
000086  2000              MOVS     r0,#0
000088  f44f4178          MOV      r1,#0xf800
00008c  a224              ADR      r2,|L1.288|
00008e  e9cd2100          STRD     r2,r1,[sp,#0]
000092  9002              STR      r0,[sp,#8]
000094  4819              LDR      r0,|L1.252|
000096  7dc2              LDRB     r2,[r0,#0x17]  ; Snake
000098  2301              MOVS     r3,#1
00009a  2103              MOVS     r1,#3
00009c  2028              MOVS     r0,#0x28
00009e  f7fffffe          BL       display_num_format
;;;153    	display_num_format(116, 3, (u32)Snake.Score, 1, "%d", RED, BLACK);
0000a2  2000              MOVS     r0,#0
0000a4  f44f4178          MOV      r1,#0xf800
0000a8  a21d              ADR      r2,|L1.288|
0000aa  e9cd2100          STRD     r2,r1,[sp,#0]
0000ae  9002              STR      r0,[sp,#8]
0000b0  4812              LDR      r0,|L1.252|
0000b2  7d82              LDRB     r2,[r0,#0x16]  ; Snake
0000b4  2301              MOVS     r3,#1
0000b6  2103              MOVS     r1,#3
0000b8  2074              MOVS     r0,#0x74
0000ba  f7fffffe          BL       display_num_format
;;;154    
;;;155    	LCD_setTextColor(RED, BLACK);
0000be  2100              MOVS     r1,#0
0000c0  f44f4078          MOV      r0,#0xf800
0000c4  f7fffffe          BL       LCD_setTextColor
;;;156    	LCD_text("YOU ARE WIN!", 44, 48);
0000c8  2230              MOVS     r2,#0x30
0000ca  212c              MOVS     r1,#0x2c
0000cc  a00c              ADR      r0,|L1.256|
0000ce  f7fffffe          BL       LCD_text
;;;157    	LCD_text("PRESS ENTER TO RESTART", 14, 72);
0000d2  2248              MOVS     r2,#0x48
0000d4  210e              MOVS     r1,#0xe
0000d6  a013              ADR      r0,|L1.292|
0000d8  f7fffffe          BL       LCD_text
;;;158    
;;;159    	while (Key_Value != KEY_DOWN_A)
0000dc  e003              B        |L1.230|
                  |L1.222|
;;;160    	{
;;;161    		Key_Value = bsp_GetKey();;
0000de  f7fffffe          BL       bsp_GetKey
0000e2  4916              LDR      r1,|L1.316|
0000e4  7008              STRB     r0,[r1,#0]
                  |L1.230|
0000e6  4815              LDR      r0,|L1.316|
0000e8  7800              LDRB     r0,[r0,#0]            ;159  ; Key_Value
0000ea  2801              CMP      r0,#1                 ;159
0000ec  d1f7              BNE      |L1.222|
;;;162    	}
;;;163    	LCD_Clear(BLACK);
0000ee  2000              MOVS     r0,#0
0000f0  f7fffffe          BL       LCD_Clear
;;;164    	Init_SNAKE();//重新初始化设置 等待进入下次游戏
0000f4  f7fffffe          BL       Init_SNAKE
;;;165    }
0000f8  bd0e              POP      {r1-r3,pc}
;;;166    
                          ENDP

0000fa  0000              DCW      0x0000
                  |L1.252|
                          DCD      Snake
                  |L1.256|
000100  594f5520          DCB      "YOU ARE WIN!",0
000104  41524520
000108  57494e21
00010c  00      
00010d  00                DCB      0
00010e  00                DCB      0
00010f  00                DCB      0
                  |L1.272|
000110  4c455645          DCB      "LEVEL:",0
000114  4c3a00  
000117  00                DCB      0
                  |L1.280|
000118  53636f72          DCB      "Score:",0
00011c  653a00  
00011f  00                DCB      0
                  |L1.288|
000120  256400            DCB      "%d",0
000123  00                DCB      0
                  |L1.292|
000124  50524553          DCB      "PRESS ENTER TO RESTART",0
000128  5320454e
00012c  54455220
000130  544f2052
000134  45535441
000138  525400  
00013b  00                DCB      0
                  |L1.316|
                          DCD      Key_Value

                          AREA ||i.Display_dead||, CODE, READONLY, ALIGN=2

                  Display_dead PROC
;;;97     //=================================================================
;;;98     void Display_dead(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;99     {
;;;100    	LCD_Clear(BLACK);
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       LCD_Clear
;;;101    
;;;102    	LCD_DrawRect(0, 0, 159, 127, DARKBLUE);
000008  f24010cf          MOV      r0,#0x1cf
00000c  237f              MOVS     r3,#0x7f
00000e  229f              MOVS     r2,#0x9f
000010  2100              MOVS     r1,#0
000012  9000              STR      r0,[sp,#0]
000014  4608              MOV      r0,r1
000016  f7fffffe          BL       LCD_DrawRect
;;;103    	LCD_DrawLine(0, 11, 159, 11, DARKBLUE);
00001a  f24010cf          MOV      r0,#0x1cf
00001e  230b              MOVS     r3,#0xb
000020  229f              MOVS     r2,#0x9f
000022  4619              MOV      r1,r3
000024  9000              STR      r0,[sp,#0]
000026  2000              MOVS     r0,#0
000028  f7fffffe          BL       LCD_DrawLine
;;;104    
;;;105    	LCD_setTextColor(WHITE, BLACK);
00002c  2100              MOVS     r1,#0
00002e  f64f70ff          MOV      r0,#0xffff
000032  f7fffffe          BL       LCD_setTextColor
;;;106    	LCD_text("LEVEL:", 4, 3);
000036  2203              MOVS     r2,#3
000038  2104              MOVS     r1,#4
00003a  a023              ADR      r0,|L2.200|
00003c  f7fffffe          BL       LCD_text
;;;107    	LCD_text("Score:", 80, 3);
000040  2203              MOVS     r2,#3
000042  2150              MOVS     r1,#0x50
000044  a022              ADR      r0,|L2.208|
000046  f7fffffe          BL       LCD_text
;;;108    	LCD_setTextColor(RED, BLACK);
00004a  2100              MOVS     r1,#0
00004c  f44f4078          MOV      r0,#0xf800
000050  f7fffffe          BL       LCD_setTextColor
;;;109    	display_num_format(40, 3, (u32)Snake.Level, 1, "%d", RED, BLACK);
000054  2000              MOVS     r0,#0
000056  f44f4178          MOV      r1,#0xf800
00005a  a21f              ADR      r2,|L2.216|
00005c  e9cd2100          STRD     r2,r1,[sp,#0]
000060  9002              STR      r0,[sp,#8]
000062  481e              LDR      r0,|L2.220|
000064  7dc2              LDRB     r2,[r0,#0x17]  ; Snake
000066  2301              MOVS     r3,#1
000068  2103              MOVS     r1,#3
00006a  2028              MOVS     r0,#0x28
00006c  f7fffffe          BL       display_num_format
;;;110    	display_num_format(116, 3, (u32)Snake.Score, 1, "%d", RED, BLACK);
000070  2000              MOVS     r0,#0
000072  f44f4178          MOV      r1,#0xf800
000076  a218              ADR      r2,|L2.216|
000078  e9cd2100          STRD     r2,r1,[sp,#0]
00007c  9002              STR      r0,[sp,#8]
00007e  4817              LDR      r0,|L2.220|
000080  7d82              LDRB     r2,[r0,#0x16]  ; Snake
000082  2301              MOVS     r3,#1
000084  2103              MOVS     r1,#3
000086  2074              MOVS     r0,#0x74
000088  f7fffffe          BL       display_num_format
;;;111    
;;;112    	LCD_setTextColor(WHITE, BLACK);
00008c  2100              MOVS     r1,#0
00008e  f64f70ff          MOV      r0,#0xffff
000092  f7fffffe          BL       LCD_setTextColor
;;;113    	LCD_text("GAME OVER!", 50, 48);
000096  2230              MOVS     r2,#0x30
000098  2132              MOVS     r1,#0x32
00009a  a011              ADR      r0,|L2.224|
00009c  f7fffffe          BL       LCD_text
;;;114    	LCD_text("PRESS ENTER TO RESTART", 14, 72);
0000a0  2248              MOVS     r2,#0x48
0000a2  210e              MOVS     r1,#0xe
0000a4  a011              ADR      r0,|L2.236|
0000a6  f7fffffe          BL       LCD_text
;;;115    
;;;116    	while (Key_Value != KEY_DOWN_A)
0000aa  e003              B        |L2.180|
                  |L2.172|
;;;117    	{
;;;118    		Key_Value = bsp_GetKey();
0000ac  f7fffffe          BL       bsp_GetKey
0000b0  4914              LDR      r1,|L2.260|
0000b2  7008              STRB     r0,[r1,#0]
                  |L2.180|
0000b4  4813              LDR      r0,|L2.260|
0000b6  7800              LDRB     r0,[r0,#0]            ;116  ; Key_Value
0000b8  2801              CMP      r0,#1                 ;116
0000ba  d1f7              BNE      |L2.172|
;;;119    	}
;;;120    	LCD_Clear(BLACK);
0000bc  2000              MOVS     r0,#0
0000be  f7fffffe          BL       LCD_Clear
;;;121    	Init_SNAKE();//重新初始化设置 等待进入下次游戏
0000c2  f7fffffe          BL       Init_SNAKE
;;;122    }
0000c6  bd0e              POP      {r1-r3,pc}
;;;123    
                          ENDP

                  |L2.200|
0000c8  4c455645          DCB      "LEVEL:",0
0000cc  4c3a00  
0000cf  00                DCB      0
                  |L2.208|
0000d0  53636f72          DCB      "Score:",0
0000d4  653a00  
0000d7  00                DCB      0
                  |L2.216|
0000d8  256400            DCB      "%d",0
0000db  00                DCB      0
                  |L2.220|
                          DCD      Snake
                  |L2.224|
0000e0  47414d45          DCB      "GAME OVER!",0
0000e4  204f5645
0000e8  522100  
0000eb  00                DCB      0
                  |L2.236|
0000ec  50524553          DCB      "PRESS ENTER TO RESTART",0
0000f0  5320454e
0000f4  54455220
0000f8  544f2052
0000fc  45535441
000100  525400  
000103  00                DCB      0
                  |L2.260|
                          DCD      Key_Value

                          AREA ||i.Init_SNAKE||, CODE, READONLY, ALIGN=2

                  Init_SNAKE PROC
;;;43     //=================================================================
;;;44     void Init_SNAKE(void)
000000  b53e              PUSH     {r1-r5,lr}
;;;45     {
;;;46     	u8 i;
;;;47     	POINT_COLOR = WHITE;	//画笔颜色
000002  f64f70ff          MOV      r0,#0xffff
000006  493c              LDR      r1,|L3.248|
000008  8008              STRH     r0,[r1,#0]
;;;48     	BACK_COLOR = BLACK;  //背景色 
00000a  2000              MOVS     r0,#0
00000c  493b              LDR      r1,|L3.252|
00000e  8008              STRH     r0,[r1,#0]
;;;49     
;;;50     	//***********绘制游戏界面********************//
;;;51     
;;;52     	LCD_DrawRect(0, 0, 159, 127, DARKBLUE);
000010  f24010cf          MOV      r0,#0x1cf
000014  237f              MOVS     r3,#0x7f
000016  229f              MOVS     r2,#0x9f
000018  2100              MOVS     r1,#0
00001a  9000              STR      r0,[sp,#0]
00001c  4608              MOV      r0,r1
00001e  f7fffffe          BL       LCD_DrawRect
;;;53     	LCD_DrawLine(0, 11, 159, 11, DARKBLUE);
000022  f24010cf          MOV      r0,#0x1cf
000026  230b              MOVS     r3,#0xb
000028  229f              MOVS     r2,#0x9f
00002a  4619              MOV      r1,r3
00002c  9000              STR      r0,[sp,#0]
00002e  2000              MOVS     r0,#0
000030  f7fffffe          BL       LCD_DrawLine
;;;54     
;;;55     	LCD_setTextColor(WHITE, BLACK);
000034  2100              MOVS     r1,#0
000036  f64f70ff          MOV      r0,#0xffff
00003a  f7fffffe          BL       LCD_setTextColor
;;;56     	LCD_text("LEVEL:", 4, 3);
00003e  2203              MOVS     r2,#3
000040  2104              MOVS     r1,#4
000042  a02f              ADR      r0,|L3.256|
000044  f7fffffe          BL       LCD_text
;;;57     	LCD_text("Score:", 80, 3);
000048  2203              MOVS     r2,#3
00004a  2150              MOVS     r1,#0x50
00004c  a02e              ADR      r0,|L3.264|
00004e  f7fffffe          BL       LCD_text
;;;58     	LCD_setTextColor(RED, BLACK);
000052  2100              MOVS     r1,#0
000054  f44f4078          MOV      r0,#0xf800
000058  f7fffffe          BL       LCD_setTextColor
;;;59     	display_num_format(40, 3, (u32)Snake.Level, 1, "%d", RED, BLACK);
00005c  2000              MOVS     r0,#0
00005e  f44f4178          MOV      r1,#0xf800
000062  a22b              ADR      r2,|L3.272|
000064  e9cd2100          STRD     r2,r1,[sp,#0]
000068  9002              STR      r0,[sp,#8]
00006a  482a              LDR      r0,|L3.276|
00006c  7dc2              LDRB     r2,[r0,#0x17]  ; Snake
00006e  2301              MOVS     r3,#1
000070  2103              MOVS     r1,#3
000072  2028              MOVS     r0,#0x28
000074  f7fffffe          BL       display_num_format
;;;60     	display_num_format(116, 3, (u32)Snake.Score, 1, "%d", RED, BLACK);
000078  2000              MOVS     r0,#0
00007a  f44f4178          MOV      r1,#0xf800
00007e  a224              ADR      r2,|L3.272|
000080  e9cd2100          STRD     r2,r1,[sp,#0]
000084  9002              STR      r0,[sp,#8]
000086  4823              LDR      r0,|L3.276|
000088  7d82              LDRB     r2,[r0,#0x16]  ; Snake
00008a  2301              MOVS     r3,#1
00008c  2103              MOVS     r1,#3
00008e  2074              MOVS     r0,#0x74
000090  f7fffffe          BL       display_num_format
;;;61     
;;;62     	//LCD_Fill(0, 0, 8, 280, DARKBLUE);//Rectangle(8,8-1,85,120,0xaa);//绘制一个矩形框, 0-127
;;;63     	//LCD_Fill(232, 0, 240, 280, DARKBLUE);//
;;;64     	//LCD_Fill(0, 0, 240, 8, DARKBLUE);//
;;;65     	//LCD_Fill(0, 272, 240, 280, DARKBLUE);//
;;;66     
;;;67     	//LCD_ShowString(0, 280, 200, 16, 16, "Score");//Show Score
;;;68     	//LCD_ShowString(0, 300, 200, 16, 16, "LEVEL");//Show Level
;;;69     	//LCD_ShowNum(50, 280, (u32)Snake.Score, 4, 16);
;;;70     	//LCD_ShowNum(50, 300, (u32)Snake.Level, 4, 16);	//LCDShow_u8Number(96,97,Snake.Level,0x00ff,0xBE5F);
;;;71     
;;;72     	//***********初始化参数********************//
;;;73     	Snake.Long = 2;	    			//定义初始化蛇的长度
000094  2002              MOVS     r0,#2
000096  491f              LDR      r1,|L3.276|
000098  7508              STRB     r0,[r1,#0x14]
;;;74     	Snake.Life = 0;	    			//初始化蛇还活着
00009a  2000              MOVS     r0,#0
00009c  7548              STRB     r0,[r1,#0x15]
;;;75     	Snake.Score = 0;          //分数为0
00009e  7588              STRB     r0,[r1,#0x16]
;;;76     	Food.Yes = 1;					    //
0000a0  2001              MOVS     r0,#1
0000a2  491d              LDR      r1,|L3.280|
0000a4  7088              STRB     r0,[r1,#2]
;;;77     	Key_Value = 0;
0000a6  2000              MOVS     r0,#0
0000a8  491c              LDR      r1,|L3.284|
0000aa  7008              STRB     r0,[r1,#0]
;;;78     	Key_V_temp = KEY_DOWN_R;//开始往右跑
0000ac  2016              MOVS     r0,#0x16
0000ae  491c              LDR      r1,|L3.288|
0000b0  7008              STRB     r0,[r1,#0]
;;;79     
;;;80     	for (i = 0; i < Snake.Long; i++)		//将蛇给赋值
0000b2  2400              MOVS     r4,#0
0000b4  e009              B        |L3.202|
                  |L3.182|
;;;81     	{
;;;82     		Snake.X[i] = i + 10;//组成蛇的4*4方块的起点坐标 根据长度循环每次增加一个方块的
0000b6  f104000a          ADD      r0,r4,#0xa
0000ba  4916              LDR      r1,|L3.276|
0000bc  5508              STRB     r0,[r1,r4]
;;;83     		Snake.Y[i] = 12;//这里的(12,12)即为蛇的起点坐标
0000be  210c              MOVS     r1,#0xc
0000c0  4814              LDR      r0,|L3.276|
0000c2  300a              ADDS     r0,r0,#0xa
0000c4  5501              STRB     r1,[r0,r4]
0000c6  1c60              ADDS     r0,r4,#1              ;80
0000c8  b2c4              UXTB     r4,r0                 ;80
                  |L3.202|
0000ca  4812              LDR      r0,|L3.276|
0000cc  7d00              LDRB     r0,[r0,#0x14]         ;80  ; Snake
0000ce  42a0              CMP      r0,r4                 ;80
0000d0  dcf1              BGT      |L3.182|
;;;84     	}
;;;85     	for (i = 0; i < Snake.Long; i++)		//根据坐标将蛇给画出来
0000d2  2400              MOVS     r4,#0
0000d4  e008              B        |L3.232|
                  |L3.214|
;;;86     	{
;;;87     		Trun_On_Point(Snake.X[i], Snake.Y[i]);
0000d6  4a0f              LDR      r2,|L3.276|
0000d8  320a              ADDS     r2,r2,#0xa
0000da  5d11              LDRB     r1,[r2,r4]
0000dc  3a0a              SUBS     r2,r2,#0xa
0000de  5d10              LDRB     r0,[r2,r4]
0000e0  f7fffffe          BL       Trun_On_Point
0000e4  1c60              ADDS     r0,r4,#1              ;85
0000e6  b2c4              UXTB     r4,r0                 ;85
                  |L3.232|
0000e8  480a              LDR      r0,|L3.276|
0000ea  7d00              LDRB     r0,[r0,#0x14]         ;85  ; Snake
0000ec  42a0              CMP      r0,r4                 ;85
0000ee  dcf2              BGT      |L3.214|
;;;88     	}
;;;89     	snake_flag = 1;
0000f0  2001              MOVS     r0,#1
0000f2  490c              LDR      r1,|L3.292|
0000f4  7008              STRB     r0,[r1,#0]
;;;90     }
0000f6  bd3e              POP      {r1-r5,pc}
;;;91     
                          ENDP

                  |L3.248|
                          DCD      POINT_COLOR
                  |L3.252|
                          DCD      BACK_COLOR
                  |L3.256|
000100  4c455645          DCB      "LEVEL:",0
000104  4c3a00  
000107  00                DCB      0
                  |L3.264|
000108  53636f72          DCB      "Score:",0
00010c  653a00  
00010f  00                DCB      0
                  |L3.272|
000110  256400            DCB      "%d",0
000113  00                DCB      0
                  |L3.276|
                          DCD      Snake
                  |L3.280|
                          DCD      Food
                  |L3.284|
                          DCD      Key_Value
                  |L3.288|
                          DCD      Key_V_temp
                  |L3.292|
                          DCD      snake_flag

                          AREA ||i.RUN_SNK||, CODE, READONLY, ALIGN=2

                  RUN_SNK PROC
;;;425    
;;;426    void RUN_SNK(void)
000000  b510              PUSH     {r4,lr}
;;;427    {
;;;428    	if (snake_flag == 0)
000002  4806              LDR      r0,|L4.28|
000004  7800              LDRB     r0,[r0,#0]  ; snake_flag
000006  b910              CBNZ     r0,|L4.14|
;;;429    	{
;;;430    		Init_SNAKE();
000008  f7fffffe          BL       Init_SNAKE
00000c  e005              B        |L4.26|
                  |L4.14|
;;;431    	}
;;;432    	else
;;;433    	{
;;;434    		Key_Value = bsp_GetKey();
00000e  f7fffffe          BL       bsp_GetKey
000012  4903              LDR      r1,|L4.32|
000014  7008              STRB     r0,[r1,#0]
;;;435    		Run_SNAKE();
000016  f7fffffe          BL       Run_SNAKE
                  |L4.26|
;;;436    	}
;;;437    }
00001a  bd10              POP      {r4,pc}
                          ENDP

                  |L4.28|
                          DCD      snake_flag
                  |L4.32|
                          DCD      Key_Value

                          AREA ||i.Run_Ahead||, CODE, READONLY, ALIGN=2

                  Run_Ahead PROC
;;;172    //=================================================================
;;;173    void Run_Ahead(void)
000000  b510              PUSH     {r4,lr}
;;;174    {
;;;175    	u8 i;
;;;176    
;;;177    	Trun_Off_Point(Snake.X[0], Snake.Y[0]); 	       //先把蛇尾给熄灭掉 
000002  4a64              LDR      r2,|L5.404|
000004  7a91              LDRB     r1,[r2,#0xa]  ; Snake
000006  7810              LDRB     r0,[r2,#0]  ; Snake
000008  f7fffffe          BL       Trun_Off_Point
;;;178    
;;;179    	if (Key_V_temp == KEY_DOWN_L)//左直行
00000c  4862              LDR      r0,|L5.408|
00000e  7800              LDRB     r0,[r0,#0]  ; Key_V_temp
000010  2813              CMP      r0,#0x13
000012  d129              BNE      |L5.104|
;;;180    	{
;;;181    		for (i = 0; i < Snake.Long - 1; i++)                    //蛇身都是它前一段的蛇身的位置
000014  2400              MOVS     r4,#0
000016  e00a              B        |L5.46|
                  |L5.24|
;;;182    		{
;;;183    			Snake.X[i] = Snake.X[i + 1];
000018  495e              LDR      r1,|L5.404|
00001a  1c60              ADDS     r0,r4,#1
00001c  5c08              LDRB     r0,[r1,r0]
00001e  5508              STRB     r0,[r1,r4]
;;;184    			Snake.Y[i] = Snake.Y[i + 1];
000020  f101000a          ADD      r0,r1,#0xa
000024  1c61              ADDS     r1,r4,#1
000026  5c41              LDRB     r1,[r0,r1]
000028  5501              STRB     r1,[r0,r4]
00002a  1c60              ADDS     r0,r4,#1              ;181
00002c  b2c4              UXTB     r4,r0                 ;181
                  |L5.46|
00002e  4859              LDR      r0,|L5.404|
000030  7d00              LDRB     r0,[r0,#0x14]         ;181  ; Snake
000032  1e40              SUBS     r0,r0,#1              ;181
000034  42a0              CMP      r0,r4                 ;181
000036  dcef              BGT      |L5.24|
;;;185    		}
;;;186    		Snake.X[Snake.Long - 1] = Snake.X[Snake.Long - 2] - 1;//补上蛇头
000038  4856              LDR      r0,|L5.404|
00003a  7d00              LDRB     r0,[r0,#0x14]  ; Snake
00003c  1e80              SUBS     r0,r0,#2
00003e  4955              LDR      r1,|L5.404|
000040  5c08              LDRB     r0,[r1,r0]
000042  1e40              SUBS     r0,r0,#1
000044  b2c1              UXTB     r1,r0
000046  4853              LDR      r0,|L5.404|
000048  7d00              LDRB     r0,[r0,#0x14]  ; Snake
00004a  1e40              SUBS     r0,r0,#1
00004c  4a51              LDR      r2,|L5.404|
00004e  5411              STRB     r1,[r2,r0]
;;;187    		Snake.Y[Snake.Long - 1] = Snake.Y[Snake.Long - 2] + 0;
000050  4610              MOV      r0,r2
000052  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000054  1e80              SUBS     r0,r0,#2
000056  f102010a          ADD      r1,r2,#0xa
00005a  5c08              LDRB     r0,[r1,r0]
00005c  390a              SUBS     r1,r1,#0xa
00005e  7d09              LDRB     r1,[r1,#0x14]  ; Snake
000060  1e49              SUBS     r1,r1,#1
000062  320a              ADDS     r2,r2,#0xa
000064  5450              STRB     r0,[r2,r1]
000066  e085              B        |L5.372|
                  |L5.104|
;;;188    	}
;;;189    	else if (Key_V_temp == KEY_DOWN_R)//右直行
000068  484b              LDR      r0,|L5.408|
00006a  7800              LDRB     r0,[r0,#0]  ; Key_V_temp
00006c  2816              CMP      r0,#0x16
00006e  d129              BNE      |L5.196|
;;;190    	{
;;;191    		for (i = 0; i < Snake.Long - 1; i++)                    //蛇身都是它前一段的蛇身的位置
000070  2400              MOVS     r4,#0
000072  e00a              B        |L5.138|
                  |L5.116|
;;;192    		{
;;;193    			Snake.X[i] = Snake.X[i + 1];
000074  4947              LDR      r1,|L5.404|
000076  1c60              ADDS     r0,r4,#1
000078  5c08              LDRB     r0,[r1,r0]
00007a  5508              STRB     r0,[r1,r4]
;;;194    			Snake.Y[i] = Snake.Y[i + 1];
00007c  f101000a          ADD      r0,r1,#0xa
000080  1c61              ADDS     r1,r4,#1
000082  5c41              LDRB     r1,[r0,r1]
000084  5501              STRB     r1,[r0,r4]
000086  1c60              ADDS     r0,r4,#1              ;191
000088  b2c4              UXTB     r4,r0                 ;191
                  |L5.138|
00008a  4842              LDR      r0,|L5.404|
00008c  7d00              LDRB     r0,[r0,#0x14]         ;191  ; Snake
00008e  1e40              SUBS     r0,r0,#1              ;191
000090  42a0              CMP      r0,r4                 ;191
000092  dcef              BGT      |L5.116|
;;;195    		}
;;;196    		Snake.X[Snake.Long - 1] = Snake.X[Snake.Long - 2] + 1;//补上蛇头
000094  483f              LDR      r0,|L5.404|
000096  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000098  1e80              SUBS     r0,r0,#2
00009a  493e              LDR      r1,|L5.404|
00009c  5c08              LDRB     r0,[r1,r0]
00009e  1c40              ADDS     r0,r0,#1
0000a0  b2c1              UXTB     r1,r0
0000a2  483c              LDR      r0,|L5.404|
0000a4  7d00              LDRB     r0,[r0,#0x14]  ; Snake
0000a6  1e40              SUBS     r0,r0,#1
0000a8  4a3a              LDR      r2,|L5.404|
0000aa  5411              STRB     r1,[r2,r0]
;;;197    		Snake.Y[Snake.Long - 1] = Snake.Y[Snake.Long - 2] + 0;
0000ac  4610              MOV      r0,r2
0000ae  7d00              LDRB     r0,[r0,#0x14]  ; Snake
0000b0  1e80              SUBS     r0,r0,#2
0000b2  f102010a          ADD      r1,r2,#0xa
0000b6  5c08              LDRB     r0,[r1,r0]
0000b8  390a              SUBS     r1,r1,#0xa
0000ba  7d09              LDRB     r1,[r1,#0x14]  ; Snake
0000bc  1e49              SUBS     r1,r1,#1
0000be  320a              ADDS     r2,r2,#0xa
0000c0  5450              STRB     r0,[r2,r1]
0000c2  e057              B        |L5.372|
                  |L5.196|
;;;198    	}
;;;199    	else if (Key_V_temp == KEY_DOWN_U)//上直行
0000c4  4834              LDR      r0,|L5.408|
0000c6  7800              LDRB     r0,[r0,#0]  ; Key_V_temp
0000c8  280d              CMP      r0,#0xd
0000ca  d127              BNE      |L5.284|
;;;200    	{
;;;201    		for (i = 0; i < Snake.Long - 1; i++)                    //蛇身都是它前一段的蛇身的位置
0000cc  2400              MOVS     r4,#0
0000ce  e00a              B        |L5.230|
                  |L5.208|
;;;202    		{
;;;203    			Snake.X[i] = Snake.X[i + 1];
0000d0  4930              LDR      r1,|L5.404|
0000d2  1c60              ADDS     r0,r4,#1
0000d4  5c08              LDRB     r0,[r1,r0]
0000d6  5508              STRB     r0,[r1,r4]
;;;204    			Snake.Y[i] = Snake.Y[i + 1];
0000d8  f101000a          ADD      r0,r1,#0xa
0000dc  1c61              ADDS     r1,r4,#1
0000de  5c41              LDRB     r1,[r0,r1]
0000e0  5501              STRB     r1,[r0,r4]
0000e2  1c60              ADDS     r0,r4,#1              ;201
0000e4  b2c4              UXTB     r4,r0                 ;201
                  |L5.230|
0000e6  482b              LDR      r0,|L5.404|
0000e8  7d00              LDRB     r0,[r0,#0x14]         ;201  ; Snake
0000ea  1e40              SUBS     r0,r0,#1              ;201
0000ec  42a0              CMP      r0,r4                 ;201
0000ee  dcef              BGT      |L5.208|
;;;205    		}
;;;206    		Snake.X[Snake.Long - 1] = Snake.X[Snake.Long - 2] + 0;//补上蛇头
0000f0  4828              LDR      r0,|L5.404|
0000f2  7d00              LDRB     r0,[r0,#0x14]  ; Snake
0000f4  1e80              SUBS     r0,r0,#2
0000f6  4927              LDR      r1,|L5.404|
0000f8  5c08              LDRB     r0,[r1,r0]
0000fa  7d09              LDRB     r1,[r1,#0x14]  ; Snake
0000fc  1e49              SUBS     r1,r1,#1
0000fe  4a25              LDR      r2,|L5.404|
000100  5450              STRB     r0,[r2,r1]
;;;207    		Snake.Y[Snake.Long - 1] = Snake.Y[Snake.Long - 2] - 1;
000102  4610              MOV      r0,r2
000104  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000106  1e80              SUBS     r0,r0,#2
000108  f102010a          ADD      r1,r2,#0xa
00010c  5c08              LDRB     r0,[r1,r0]
00010e  1e40              SUBS     r0,r0,#1
000110  b2c2              UXTB     r2,r0
000112  4820              LDR      r0,|L5.404|
000114  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000116  1e40              SUBS     r0,r0,#1
000118  540a              STRB     r2,[r1,r0]
00011a  e02b              B        |L5.372|
                  |L5.284|
;;;208    	}
;;;209    	else if (Key_V_temp == KEY_DOWN_D)//下直行
00011c  481e              LDR      r0,|L5.408|
00011e  7800              LDRB     r0,[r0,#0]  ; Key_V_temp
000120  2810              CMP      r0,#0x10
000122  d127              BNE      |L5.372|
;;;210    	{
;;;211    		for (i = 0; i < Snake.Long - 1; i++)                    //蛇身都是它前一段的蛇身的位置
000124  2400              MOVS     r4,#0
000126  e00a              B        |L5.318|
                  |L5.296|
;;;212    		{
;;;213    			Snake.X[i] = Snake.X[i + 1];
000128  491a              LDR      r1,|L5.404|
00012a  1c60              ADDS     r0,r4,#1
00012c  5c08              LDRB     r0,[r1,r0]
00012e  5508              STRB     r0,[r1,r4]
;;;214    			Snake.Y[i] = Snake.Y[i + 1];
000130  f101000a          ADD      r0,r1,#0xa
000134  1c61              ADDS     r1,r4,#1
000136  5c41              LDRB     r1,[r0,r1]
000138  5501              STRB     r1,[r0,r4]
00013a  1c60              ADDS     r0,r4,#1              ;211
00013c  b2c4              UXTB     r4,r0                 ;211
                  |L5.318|
00013e  4815              LDR      r0,|L5.404|
000140  7d00              LDRB     r0,[r0,#0x14]         ;211  ; Snake
000142  1e40              SUBS     r0,r0,#1              ;211
000144  42a0              CMP      r0,r4                 ;211
000146  dcef              BGT      |L5.296|
;;;215    		}
;;;216    		Snake.X[Snake.Long - 1] = Snake.X[Snake.Long - 2] + 0;//补上蛇头
000148  4812              LDR      r0,|L5.404|
00014a  7d00              LDRB     r0,[r0,#0x14]  ; Snake
00014c  1e80              SUBS     r0,r0,#2
00014e  4911              LDR      r1,|L5.404|
000150  5c08              LDRB     r0,[r1,r0]
000152  7d09              LDRB     r1,[r1,#0x14]  ; Snake
000154  1e49              SUBS     r1,r1,#1
000156  4a0f              LDR      r2,|L5.404|
000158  5450              STRB     r0,[r2,r1]
;;;217    		Snake.Y[Snake.Long - 1] = Snake.Y[Snake.Long - 2] + 1;
00015a  4610              MOV      r0,r2
00015c  7d00              LDRB     r0,[r0,#0x14]  ; Snake
00015e  1e80              SUBS     r0,r0,#2
000160  f102010a          ADD      r1,r2,#0xa
000164  5c08              LDRB     r0,[r1,r0]
000166  1c40              ADDS     r0,r0,#1
000168  b2c2              UXTB     r2,r0
00016a  480a              LDR      r0,|L5.404|
00016c  7d01              LDRB     r1,[r0,#0x14]  ; Snake
00016e  1e49              SUBS     r1,r1,#1
000170  300a              ADDS     r0,r0,#0xa
000172  5442              STRB     r2,[r0,r1]
                  |L5.372|
;;;218    	}
;;;219    
;;;220    	for (i = 0; i < Snake.Long; i++)			            //让蛇显示出来
000174  2400              MOVS     r4,#0
000176  e008              B        |L5.394|
                  |L5.376|
;;;221    	{
;;;222    		Trun_On_Point(Snake.X[i], Snake.Y[i]);
000178  4a06              LDR      r2,|L5.404|
00017a  320a              ADDS     r2,r2,#0xa
00017c  5d11              LDRB     r1,[r2,r4]
00017e  3a0a              SUBS     r2,r2,#0xa
000180  5d10              LDRB     r0,[r2,r4]
000182  f7fffffe          BL       Trun_On_Point
000186  1c60              ADDS     r0,r4,#1              ;220
000188  b2c4              UXTB     r4,r0                 ;220
                  |L5.394|
00018a  4802              LDR      r0,|L5.404|
00018c  7d00              LDRB     r0,[r0,#0x14]         ;220  ; Snake
00018e  42a0              CMP      r0,r4                 ;220
000190  dcf2              BGT      |L5.376|
;;;223    	}
;;;224    }
000192  bd10              POP      {r4,pc}
;;;225    
                          ENDP

                  |L5.404|
                          DCD      Snake
                  |L5.408|
                          DCD      Key_V_temp

                          AREA ||i.Run_SNAKE||, CODE, READONLY, ALIGN=2

                  Run_SNAKE PROC
;;;231    //=================================================================
;;;232    void Run_SNAKE(void)
000000  b53e              PUSH     {r1-r5,lr}
;;;233    {
;;;234    	u8 i = 0;
000002  2400              MOVS     r4,#0
;;;235    	u16 iSeed = 0;
000004  2500              MOVS     r5,#0
;;;236    
;;;237    	iSeed = bsp_GetAdc_Average(1);//通过模拟输入获取悬空引脚的电平产生随机种子
000006  2001              MOVS     r0,#1
000008  f7fffffe          BL       bsp_GetAdc_Average
00000c  4605              MOV      r5,r0
;;;238    	srand(iSeed);
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       srand
;;;239    
;;;240    	/*********************根据按键选择蛇的运动方向*******************/
;;;241      //右转
;;;242    	if (Key_Value == KEY_DOWN_R && Key_V_temp != KEY_DOWN_L)
000014  48fb              LDR      r0,|L6.1028|
000016  7800              LDRB     r0,[r0,#0]  ; Key_Value
000018  2816              CMP      r0,#0x16
00001a  d146              BNE      |L6.170|
00001c  48fa              LDR      r0,|L6.1032|
00001e  7800              LDRB     r0,[r0,#0]  ; Key_V_temp
000020  2813              CMP      r0,#0x13
000022  d042              BEQ      |L6.170|
;;;243    	{
;;;244    		Trun_Off_Point(Snake.X[0], Snake.Y[0]); 	       //先把蛇尾给熄灭掉 
000024  4af9              LDR      r2,|L6.1036|
000026  7a91              LDRB     r1,[r2,#0xa]  ; Snake
000028  7810              LDRB     r0,[r2,#0]  ; Snake
00002a  f7fffffe          BL       Trun_Off_Point
;;;245    
;;;246    		for (i = 0; i < Snake.Long - 1; i++)                    //蛇身都是它前一段的蛇身的位置
00002e  bf00              NOP      
000030  e00a              B        |L6.72|
                  |L6.50|
;;;247    		{
;;;248    			Snake.X[i] = Snake.X[i + 1];
000032  49f6              LDR      r1,|L6.1036|
000034  1c60              ADDS     r0,r4,#1
000036  5c08              LDRB     r0,[r1,r0]
000038  5508              STRB     r0,[r1,r4]
;;;249    			Snake.Y[i] = Snake.Y[i + 1];
00003a  f101000a          ADD      r0,r1,#0xa
00003e  1c61              ADDS     r1,r4,#1
000040  5c41              LDRB     r1,[r0,r1]
000042  5501              STRB     r1,[r0,r4]
000044  1c60              ADDS     r0,r4,#1              ;246
000046  b2c4              UXTB     r4,r0                 ;246
                  |L6.72|
000048  48f0              LDR      r0,|L6.1036|
00004a  7d00              LDRB     r0,[r0,#0x14]         ;246  ; Snake
00004c  1e40              SUBS     r0,r0,#1              ;246
00004e  42a0              CMP      r0,r4                 ;246
000050  dcef              BGT      |L6.50|
;;;250    		}
;;;251    
;;;252    		Snake.X[Snake.Long - 1] = Snake.X[Snake.Long - 2] + 1;
000052  48ee              LDR      r0,|L6.1036|
000054  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000056  1e80              SUBS     r0,r0,#2
000058  49ec              LDR      r1,|L6.1036|
00005a  5c08              LDRB     r0,[r1,r0]
00005c  1c40              ADDS     r0,r0,#1
00005e  b2c1              UXTB     r1,r0
000060  48ea              LDR      r0,|L6.1036|
000062  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000064  1e40              SUBS     r0,r0,#1
000066  4ae9              LDR      r2,|L6.1036|
000068  5411              STRB     r1,[r2,r0]
;;;253    		Snake.Y[Snake.Long - 1] = Snake.Y[Snake.Long - 2] + 0; //蛇头向你要求的方向移动
00006a  4610              MOV      r0,r2
00006c  7d00              LDRB     r0,[r0,#0x14]  ; Snake
00006e  1e80              SUBS     r0,r0,#2
000070  f102010a          ADD      r1,r2,#0xa
000074  5c08              LDRB     r0,[r1,r0]
000076  390a              SUBS     r1,r1,#0xa
000078  7d09              LDRB     r1,[r1,#0x14]  ; Snake
00007a  1e49              SUBS     r1,r1,#1
00007c  320a              ADDS     r2,r2,#0xa
00007e  5450              STRB     r0,[r2,r1]
;;;254    
;;;255    		for (i = 0; i < Snake.Long; i++)			            //这个让蛇显示出来的函数
000080  2400              MOVS     r4,#0
000082  e008              B        |L6.150|
                  |L6.132|
;;;256    		{
;;;257    			Trun_On_Point(Snake.X[i], Snake.Y[i]);
000084  4ae1              LDR      r2,|L6.1036|
000086  320a              ADDS     r2,r2,#0xa
000088  5d11              LDRB     r1,[r2,r4]
00008a  3a0a              SUBS     r2,r2,#0xa
00008c  5d10              LDRB     r0,[r2,r4]
00008e  f7fffffe          BL       Trun_On_Point
000092  1c60              ADDS     r0,r4,#1              ;255
000094  b2c4              UXTB     r4,r0                 ;255
                  |L6.150|
000096  48dd              LDR      r0,|L6.1036|
000098  7d00              LDRB     r0,[r0,#0x14]         ;255  ; Snake
00009a  42a0              CMP      r0,r4                 ;255
00009c  dcf2              BGT      |L6.132|
;;;258    		}
;;;259    		Key_V_temp = KEY_DOWN_R;
00009e  2016              MOVS     r0,#0x16
0000a0  49d9              LDR      r1,|L6.1032|
0000a2  7008              STRB     r0,[r1,#0]
;;;260    
;;;261    		Key_Value = 0;
0000a4  2000              MOVS     r0,#0
0000a6  49d7              LDR      r1,|L6.1028|
0000a8  7008              STRB     r0,[r1,#0]
                  |L6.170|
;;;262    		//while(RmtCnt!=0);//松手检测
;;;263    	}
;;;264    
;;;265    	//左转
;;;266    	if (Key_Value == KEY_DOWN_L && Key_V_temp != KEY_DOWN_R)
0000aa  48d6              LDR      r0,|L6.1028|
0000ac  7800              LDRB     r0,[r0,#0]  ; Key_Value
0000ae  2813              CMP      r0,#0x13
0000b0  d146              BNE      |L6.320|
0000b2  48d5              LDR      r0,|L6.1032|
0000b4  7800              LDRB     r0,[r0,#0]  ; Key_V_temp
0000b6  2816              CMP      r0,#0x16
0000b8  d042              BEQ      |L6.320|
;;;267    	{
;;;268    		Trun_Off_Point(Snake.X[0], Snake.Y[0]); 		   //先把蛇尾给熄灭掉 
0000ba  4ad4              LDR      r2,|L6.1036|
0000bc  7a91              LDRB     r1,[r2,#0xa]  ; Snake
0000be  7810              LDRB     r0,[r2,#0]  ; Snake
0000c0  f7fffffe          BL       Trun_Off_Point
;;;269    
;;;270    		for (i = 0; i < Snake.Long - 1; i++)                     //蛇身都是它前一段的蛇身的位置
0000c4  2400              MOVS     r4,#0
0000c6  e00a              B        |L6.222|
                  |L6.200|
;;;271    		{
;;;272    			Snake.X[i] = Snake.X[i + 1];
0000c8  49d0              LDR      r1,|L6.1036|
0000ca  1c60              ADDS     r0,r4,#1
0000cc  5c08              LDRB     r0,[r1,r0]
0000ce  5508              STRB     r0,[r1,r4]
;;;273    			Snake.Y[i] = Snake.Y[i + 1];
0000d0  f101000a          ADD      r0,r1,#0xa
0000d4  1c61              ADDS     r1,r4,#1
0000d6  5c41              LDRB     r1,[r0,r1]
0000d8  5501              STRB     r1,[r0,r4]
0000da  1c60              ADDS     r0,r4,#1              ;270
0000dc  b2c4              UXTB     r4,r0                 ;270
                  |L6.222|
0000de  48cb              LDR      r0,|L6.1036|
0000e0  7d00              LDRB     r0,[r0,#0x14]         ;270  ; Snake
0000e2  1e40              SUBS     r0,r0,#1              ;270
0000e4  42a0              CMP      r0,r4                 ;270
0000e6  dcef              BGT      |L6.200|
;;;274    		}
;;;275    
;;;276    		Snake.X[Snake.Long - 1] = Snake.X[Snake.Long - 2] - 1;
0000e8  48c8              LDR      r0,|L6.1036|
0000ea  7d00              LDRB     r0,[r0,#0x14]  ; Snake
0000ec  1e80              SUBS     r0,r0,#2
0000ee  49c7              LDR      r1,|L6.1036|
0000f0  5c08              LDRB     r0,[r1,r0]
0000f2  1e40              SUBS     r0,r0,#1
0000f4  b2c1              UXTB     r1,r0
0000f6  48c5              LDR      r0,|L6.1036|
0000f8  7d00              LDRB     r0,[r0,#0x14]  ; Snake
0000fa  1e40              SUBS     r0,r0,#1
0000fc  4ac3              LDR      r2,|L6.1036|
0000fe  5411              STRB     r1,[r2,r0]
;;;277    		Snake.Y[Snake.Long - 1] = Snake.Y[Snake.Long - 2] + 0; //蛇头向你要求的方向移动
000100  4610              MOV      r0,r2
000102  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000104  1e80              SUBS     r0,r0,#2
000106  f102010a          ADD      r1,r2,#0xa
00010a  5c08              LDRB     r0,[r1,r0]
00010c  390a              SUBS     r1,r1,#0xa
00010e  7d09              LDRB     r1,[r1,#0x14]  ; Snake
000110  1e49              SUBS     r1,r1,#1
000112  320a              ADDS     r2,r2,#0xa
000114  5450              STRB     r0,[r2,r1]
;;;278    
;;;279    		for (i = 0; i < Snake.Long; i++)			            //这个让蛇显示出来的函数
000116  2400              MOVS     r4,#0
000118  e008              B        |L6.300|
                  |L6.282|
;;;280    		{
;;;281    			Trun_On_Point(Snake.X[i], Snake.Y[i]);
00011a  4abc              LDR      r2,|L6.1036|
00011c  320a              ADDS     r2,r2,#0xa
00011e  5d11              LDRB     r1,[r2,r4]
000120  3a0a              SUBS     r2,r2,#0xa
000122  5d10              LDRB     r0,[r2,r4]
000124  f7fffffe          BL       Trun_On_Point
000128  1c60              ADDS     r0,r4,#1              ;279
00012a  b2c4              UXTB     r4,r0                 ;279
                  |L6.300|
00012c  48b7              LDR      r0,|L6.1036|
00012e  7d00              LDRB     r0,[r0,#0x14]         ;279  ; Snake
000130  42a0              CMP      r0,r4                 ;279
000132  dcf2              BGT      |L6.282|
;;;282    		}
;;;283    		Key_V_temp = KEY_DOWN_L;
000134  2013              MOVS     r0,#0x13
000136  49b4              LDR      r1,|L6.1032|
000138  7008              STRB     r0,[r1,#0]
;;;284    
;;;285    		Key_Value = 0;
00013a  2000              MOVS     r0,#0
00013c  49b1              LDR      r1,|L6.1028|
00013e  7008              STRB     r0,[r1,#0]
                  |L6.320|
;;;286    		//while(RmtCnt!=0);//松手检测    
;;;287    	}
;;;288    
;;;289    	//向上
;;;290    	if (Key_Value == KEY_DOWN_U && Key_V_temp != KEY_DOWN_D)
000140  48b0              LDR      r0,|L6.1028|
000142  7800              LDRB     r0,[r0,#0]  ; Key_Value
000144  280d              CMP      r0,#0xd
000146  d144              BNE      |L6.466|
000148  48af              LDR      r0,|L6.1032|
00014a  7800              LDRB     r0,[r0,#0]  ; Key_V_temp
00014c  2810              CMP      r0,#0x10
00014e  d040              BEQ      |L6.466|
;;;291    	{
;;;292    
;;;293    		Trun_Off_Point(Snake.X[0], Snake.Y[0]); 		  //先把蛇尾给熄灭掉 
000150  4aae              LDR      r2,|L6.1036|
000152  7a91              LDRB     r1,[r2,#0xa]  ; Snake
000154  7810              LDRB     r0,[r2,#0]  ; Snake
000156  f7fffffe          BL       Trun_Off_Point
;;;294    
;;;295    		for (i = 0; i < Snake.Long - 1; i++)                   //蛇身都是它前一段的蛇身的位置
00015a  2400              MOVS     r4,#0
00015c  e00a              B        |L6.372|
                  |L6.350|
;;;296    		{
;;;297    			Snake.X[i] = Snake.X[i + 1];
00015e  49ab              LDR      r1,|L6.1036|
000160  1c60              ADDS     r0,r4,#1
000162  5c08              LDRB     r0,[r1,r0]
000164  5508              STRB     r0,[r1,r4]
;;;298    			Snake.Y[i] = Snake.Y[i + 1];
000166  f101000a          ADD      r0,r1,#0xa
00016a  1c61              ADDS     r1,r4,#1
00016c  5c41              LDRB     r1,[r0,r1]
00016e  5501              STRB     r1,[r0,r4]
000170  1c60              ADDS     r0,r4,#1              ;295
000172  b2c4              UXTB     r4,r0                 ;295
                  |L6.372|
000174  48a5              LDR      r0,|L6.1036|
000176  7d00              LDRB     r0,[r0,#0x14]         ;295  ; Snake
000178  1e40              SUBS     r0,r0,#1              ;295
00017a  42a0              CMP      r0,r4                 ;295
00017c  dcef              BGT      |L6.350|
;;;299    		}
;;;300    
;;;301    		Snake.X[Snake.Long - 1] = Snake.X[Snake.Long - 2] + 0;
00017e  48a3              LDR      r0,|L6.1036|
000180  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000182  1e80              SUBS     r0,r0,#2
000184  49a1              LDR      r1,|L6.1036|
000186  5c08              LDRB     r0,[r1,r0]
000188  7d09              LDRB     r1,[r1,#0x14]  ; Snake
00018a  1e49              SUBS     r1,r1,#1
00018c  4a9f              LDR      r2,|L6.1036|
00018e  5450              STRB     r0,[r2,r1]
;;;302    		Snake.Y[Snake.Long - 1] = Snake.Y[Snake.Long - 2] - 1; //蛇头向你要求的方向移动
000190  4610              MOV      r0,r2
000192  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000194  1e80              SUBS     r0,r0,#2
000196  f102010a          ADD      r1,r2,#0xa
00019a  5c08              LDRB     r0,[r1,r0]
00019c  1e40              SUBS     r0,r0,#1
00019e  b2c2              UXTB     r2,r0
0001a0  489a              LDR      r0,|L6.1036|
0001a2  7d00              LDRB     r0,[r0,#0x14]  ; Snake
0001a4  1e40              SUBS     r0,r0,#1
0001a6  540a              STRB     r2,[r1,r0]
;;;303    
;;;304    		for (i = 0; i < Snake.Long; i++)			           //这个让蛇显示出来的函数
0001a8  2400              MOVS     r4,#0
0001aa  e008              B        |L6.446|
                  |L6.428|
;;;305    		{
;;;306    			Trun_On_Point(Snake.X[i], Snake.Y[i]);
0001ac  4a97              LDR      r2,|L6.1036|
0001ae  320a              ADDS     r2,r2,#0xa
0001b0  5d11              LDRB     r1,[r2,r4]
0001b2  3a0a              SUBS     r2,r2,#0xa
0001b4  5d10              LDRB     r0,[r2,r4]
0001b6  f7fffffe          BL       Trun_On_Point
0001ba  1c60              ADDS     r0,r4,#1              ;304
0001bc  b2c4              UXTB     r4,r0                 ;304
                  |L6.446|
0001be  4893              LDR      r0,|L6.1036|
0001c0  7d00              LDRB     r0,[r0,#0x14]         ;304  ; Snake
0001c2  42a0              CMP      r0,r4                 ;304
0001c4  dcf2              BGT      |L6.428|
;;;307    		}
;;;308    		Key_V_temp = KEY_DOWN_U;
0001c6  200d              MOVS     r0,#0xd
0001c8  498f              LDR      r1,|L6.1032|
0001ca  7008              STRB     r0,[r1,#0]
;;;309    
;;;310    		Key_Value = 0;
0001cc  2000              MOVS     r0,#0
0001ce  498d              LDR      r1,|L6.1028|
0001d0  7008              STRB     r0,[r1,#0]
                  |L6.466|
;;;311    		//while(RmtCnt!=0);//松手检测    
;;;312    	}
;;;313    
;;;314    	//向下
;;;315    	if (Key_Value == KEY_DOWN_D && Key_V_temp != KEY_DOWN_U)
0001d2  488c              LDR      r0,|L6.1028|
0001d4  7800              LDRB     r0,[r0,#0]  ; Key_Value
0001d6  2810              CMP      r0,#0x10
0001d8  d145              BNE      |L6.614|
0001da  488b              LDR      r0,|L6.1032|
0001dc  7800              LDRB     r0,[r0,#0]  ; Key_V_temp
0001de  280d              CMP      r0,#0xd
0001e0  d041              BEQ      |L6.614|
;;;316    	{
;;;317    
;;;318    		Trun_Off_Point(Snake.X[0], Snake.Y[0]); 		 //先把蛇尾给熄灭掉 
0001e2  4a8a              LDR      r2,|L6.1036|
0001e4  7a91              LDRB     r1,[r2,#0xa]  ; Snake
0001e6  7810              LDRB     r0,[r2,#0]  ; Snake
0001e8  f7fffffe          BL       Trun_Off_Point
;;;319    
;;;320    		for (i = 0; i < Snake.Long - 1; i++)                  //蛇身都是它前一段的蛇身的位置
0001ec  2400              MOVS     r4,#0
0001ee  e00a              B        |L6.518|
                  |L6.496|
;;;321    		{
;;;322    			Snake.X[i] = Snake.X[i + 1];
0001f0  4986              LDR      r1,|L6.1036|
0001f2  1c60              ADDS     r0,r4,#1
0001f4  5c08              LDRB     r0,[r1,r0]
0001f6  5508              STRB     r0,[r1,r4]
;;;323    			Snake.Y[i] = Snake.Y[i + 1];
0001f8  f101000a          ADD      r0,r1,#0xa
0001fc  1c61              ADDS     r1,r4,#1
0001fe  5c41              LDRB     r1,[r0,r1]
000200  5501              STRB     r1,[r0,r4]
000202  1c60              ADDS     r0,r4,#1              ;320
000204  b2c4              UXTB     r4,r0                 ;320
                  |L6.518|
000206  4881              LDR      r0,|L6.1036|
000208  7d00              LDRB     r0,[r0,#0x14]         ;320  ; Snake
00020a  1e40              SUBS     r0,r0,#1              ;320
00020c  42a0              CMP      r0,r4                 ;320
00020e  dcef              BGT      |L6.496|
;;;324    		}
;;;325    
;;;326    		Snake.X[Snake.Long - 1] = Snake.X[Snake.Long - 2] + 0;
000210  487e              LDR      r0,|L6.1036|
000212  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000214  1e80              SUBS     r0,r0,#2
000216  497d              LDR      r1,|L6.1036|
000218  5c08              LDRB     r0,[r1,r0]
00021a  7d09              LDRB     r1,[r1,#0x14]  ; Snake
00021c  1e49              SUBS     r1,r1,#1
00021e  4a7b              LDR      r2,|L6.1036|
000220  5450              STRB     r0,[r2,r1]
;;;327    		Snake.Y[Snake.Long - 1] = Snake.Y[Snake.Long - 2] + 1; //蛇头向你要求的方向移动
000222  4610              MOV      r0,r2
000224  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000226  1e80              SUBS     r0,r0,#2
000228  f102010a          ADD      r1,r2,#0xa
00022c  5c08              LDRB     r0,[r1,r0]
00022e  1c40              ADDS     r0,r0,#1
000230  b2c2              UXTB     r2,r0
000232  4876              LDR      r0,|L6.1036|
000234  7d01              LDRB     r1,[r0,#0x14]  ; Snake
000236  1e49              SUBS     r1,r1,#1
000238  300a              ADDS     r0,r0,#0xa
00023a  5442              STRB     r2,[r0,r1]
;;;328    
;;;329    		for (i = 0; i < Snake.Long; i++)			           //这个让蛇显示出来的函数
00023c  2400              MOVS     r4,#0
00023e  e008              B        |L6.594|
                  |L6.576|
;;;330    		{
;;;331    			Trun_On_Point(Snake.X[i], Snake.Y[i]);
000240  4a72              LDR      r2,|L6.1036|
000242  320a              ADDS     r2,r2,#0xa
000244  5d11              LDRB     r1,[r2,r4]
000246  3a0a              SUBS     r2,r2,#0xa
000248  5d10              LDRB     r0,[r2,r4]
00024a  f7fffffe          BL       Trun_On_Point
00024e  1c60              ADDS     r0,r4,#1              ;329
000250  b2c4              UXTB     r4,r0                 ;329
                  |L6.594|
000252  486e              LDR      r0,|L6.1036|
000254  7d00              LDRB     r0,[r0,#0x14]         ;329  ; Snake
000256  42a0              CMP      r0,r4                 ;329
000258  dcf2              BGT      |L6.576|
;;;332    		}
;;;333    		Key_V_temp = KEY_DOWN_D;
00025a  2010              MOVS     r0,#0x10
00025c  496a              LDR      r1,|L6.1032|
00025e  7008              STRB     r0,[r1,#0]
;;;334    
;;;335    		Key_Value = 0;
000260  2000              MOVS     r0,#0
000262  4968              LDR      r1,|L6.1028|
000264  7008              STRB     r0,[r1,#0]
                  |L6.614|
;;;336    		//while(RmtCnt!=0);//松手检测    
;;;337    	}
;;;338    	if (Key_Value == KEY_DOWN_B) // check if button left is pressed
000266  4867              LDR      r0,|L6.1028|
000268  7800              LDRB     r0,[r0,#0]  ; Key_Value
00026a  2804              CMP      r0,#4
00026c  d10d              BNE      |L6.650|
;;;339    	{
;;;340    		LCD_Clear(BLACK);
00026e  2000              MOVS     r0,#0
000270  f7fffffe          BL       LCD_Clear
;;;341    		game_sel = 0;
000274  2000              MOVS     r0,#0
000276  4966              LDR      r1,|L6.1040|
000278  7008              STRB     r0,[r1,#0]
;;;342    		snake_flag = 0;
00027a  4966              LDR      r1,|L6.1044|
00027c  7008              STRB     r0,[r1,#0]
;;;343    		Key_V_temp = KEY_DOWN_B;
00027e  2004              MOVS     r0,#4
000280  4961              LDR      r1,|L6.1032|
000282  7008              STRB     r0,[r1,#0]
;;;344    		Key_Value = 0;
000284  2000              MOVS     r0,#0
000286  495f              LDR      r1,|L6.1028|
000288  7008              STRB     r0,[r1,#0]
                  |L6.650|
;;;345    	}
;;;346    
;;;347    	/****************根据按键选择蛇的运动程序结束*******************/
;;;348    	/////////////////////////////////////////////////////////////////
;;;349    
;;;350    	/************************判断蛇是否死亡***********************/
;;;351    
;;;352      //判蛇头是否撞到墙壁
;;;353    	if (Snake.X[Snake.Long - 1] <= 0 || Snake.X[Snake.Long - 1] >= 39 || Snake.Y[Snake.Long - 1] <= 3 || Snake.Y[Snake.Long - 1] >= 31)
00028a  4860              LDR      r0,|L6.1036|
00028c  7d00              LDRB     r0,[r0,#0x14]  ; Snake
00028e  1e40              SUBS     r0,r0,#1
000290  495e              LDR      r1,|L6.1036|
000292  5c08              LDRB     r0,[r1,r0]
000294  2800              CMP      r0,#0
000296  dd12              BLE      |L6.702|
000298  4608              MOV      r0,r1
00029a  7d00              LDRB     r0,[r0,#0x14]  ; Snake
00029c  1e40              SUBS     r0,r0,#1
00029e  5c08              LDRB     r0,[r1,r0]
0002a0  2827              CMP      r0,#0x27
0002a2  da0c              BGE      |L6.702|
0002a4  4608              MOV      r0,r1
0002a6  7d00              LDRB     r0,[r0,#0x14]  ; Snake
0002a8  1e40              SUBS     r0,r0,#1
0002aa  310a              ADDS     r1,r1,#0xa
0002ac  5c08              LDRB     r0,[r1,r0]
0002ae  2803              CMP      r0,#3
0002b0  dd05              BLE      |L6.702|
0002b2  4856              LDR      r0,|L6.1036|
0002b4  7d00              LDRB     r0,[r0,#0x14]  ; Snake
0002b6  1e40              SUBS     r0,r0,#1
0002b8  5c08              LDRB     r0,[r1,r0]
0002ba  281f              CMP      r0,#0x1f
0002bc  db02              BLT      |L6.708|
                  |L6.702|
;;;354    	{
;;;355    		Snake.Life = 1;//死亡
0002be  2001              MOVS     r0,#1
0002c0  4952              LDR      r1,|L6.1036|
0002c2  7548              STRB     r0,[r1,#0x15]
                  |L6.708|
;;;356    	}
;;;357    
;;;358    	for (i = 3; i < Snake.Long; i++)//从第三节开始判断蛇头是否咬到自己
0002c4  2403              MOVS     r4,#3
0002c6  e011              B        |L6.748|
                  |L6.712|
;;;359    	{
;;;360    		if (Snake.X[i] == Snake.X[0] && Snake.Y[i] == Snake.Y[0])
0002c8  4850              LDR      r0,|L6.1036|
0002ca  5d00              LDRB     r0,[r0,r4]
0002cc  494f              LDR      r1,|L6.1036|
0002ce  7809              LDRB     r1,[r1,#0]  ; Snake
0002d0  4288              CMP      r0,r1
0002d2  d109              BNE      |L6.744|
0002d4  484d              LDR      r0,|L6.1036|
0002d6  300a              ADDS     r0,r0,#0xa
0002d8  5d00              LDRB     r0,[r0,r4]
0002da  494c              LDR      r1,|L6.1036|
0002dc  7a89              LDRB     r1,[r1,#0xa]  ; Snake
0002de  4288              CMP      r0,r1
0002e0  d102              BNE      |L6.744|
;;;361    		{
;;;362    			Snake.Life = 1;//死亡
0002e2  2001              MOVS     r0,#1
0002e4  4949              LDR      r1,|L6.1036|
0002e6  7548              STRB     r0,[r1,#0x15]
                  |L6.744|
0002e8  1c60              ADDS     r0,r4,#1              ;358
0002ea  b2c4              UXTB     r4,r0                 ;358
                  |L6.748|
0002ec  4847              LDR      r0,|L6.1036|
0002ee  7d00              LDRB     r0,[r0,#0x14]         ;358  ; Snake
0002f0  42a0              CMP      r0,r4                 ;358
0002f2  dce9              BGT      |L6.712|
;;;363    		}
;;;364    	}
;;;365    
;;;366    	if (Snake.Life == 1)//死亡
0002f4  4845              LDR      r0,|L6.1036|
0002f6  7d40              LDRB     r0,[r0,#0x15]  ; Snake
0002f8  2801              CMP      r0,#1
0002fa  d101              BNE      |L6.768|
;;;367    	{
;;;368    		Display_dead();//GAME OVER
0002fc  f7fffffe          BL       Display_dead
                  |L6.768|
;;;369    	}
;;;370    	/******************判断蛇是否死亡程序结束***********************/
;;;371    	/////////////////////////////////////////////////////////////////
;;;372    
;;;373    
;;;374    	/************************判断蛇是否最长了**********************/
;;;375    	if (Snake.Long == SNAKE_Max_Long)
000300  4842              LDR      r0,|L6.1036|
000302  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000304  280a              CMP      r0,#0xa
000306  d101              BNE      |L6.780|
;;;376    	{
;;;377    		Display_Pass();//过关
000308  f7fffffe          BL       Display_Pass
                  |L6.780|
;;;378    	}
;;;379    	/////////////////////////////////////////////////////////////////										   
;;;380    
;;;381    	/*************************判蛇是否吃到食物**********************/
;;;382    	if (Snake.X[Snake.Long - 1] == Food.X && Snake.Y[Snake.Long - 1] == Food.Y)//
00030c  483f              LDR      r0,|L6.1036|
00030e  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000310  1e40              SUBS     r0,r0,#1
000312  493e              LDR      r1,|L6.1036|
000314  5c08              LDRB     r0,[r1,r0]
000316  4940              LDR      r1,|L6.1048|
000318  7809              LDRB     r1,[r1,#0]  ; Food
00031a  4288              CMP      r0,r1
00031c  d132              BNE      |L6.900|
00031e  483b              LDR      r0,|L6.1036|
000320  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000322  1e40              SUBS     r0,r0,#1
000324  4939              LDR      r1,|L6.1036|
000326  310a              ADDS     r1,r1,#0xa
000328  5c08              LDRB     r0,[r1,r0]
00032a  493b              LDR      r1,|L6.1048|
00032c  7849              LDRB     r1,[r1,#1]  ; Food
00032e  4288              CMP      r0,r1
000330  d128              BNE      |L6.900|
;;;383    	{
;;;384    		//Trun_Off_Point(Food.X,Food.Y); 		 //消隐食物
;;;385    		Snake.Long++;//蛇节数加1
000332  4836              LDR      r0,|L6.1036|
000334  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000336  1c40              ADDS     r0,r0,#1
000338  4934              LDR      r1,|L6.1036|
00033a  7508              STRB     r0,[r1,#0x14]
;;;386    		Snake.X[Snake.Long - 1] = Food.X;
00033c  4836              LDR      r0,|L6.1048|
00033e  7801              LDRB     r1,[r0,#0]  ; Food
000340  4832              LDR      r0,|L6.1036|
000342  7d00              LDRB     r0,[r0,#0x14]  ; Snake
000344  1e40              SUBS     r0,r0,#1
000346  4a31              LDR      r2,|L6.1036|
000348  5411              STRB     r1,[r2,r0]
;;;387    		Snake.Y[Snake.Long - 1] = Food.Y;
00034a  4833              LDR      r0,|L6.1048|
00034c  7842              LDRB     r2,[r0,#1]  ; Food
00034e  482f              LDR      r0,|L6.1036|
000350  7d01              LDRB     r1,[r0,#0x14]  ; Snake
000352  1e49              SUBS     r1,r1,#1
000354  300a              ADDS     r0,r0,#0xa
000356  5442              STRB     r2,[r0,r1]
;;;388    		Snake.Score += 10;
000358  380a              SUBS     r0,r0,#0xa
00035a  7d80              LDRB     r0,[r0,#0x16]  ; Snake
00035c  300a              ADDS     r0,r0,#0xa
00035e  492b              LDR      r1,|L6.1036|
000360  7588              STRB     r0,[r1,#0x16]
;;;389    		display_num_format(116, 3, (u32)Snake.Score, 1, "%d", RED, BLACK);
000362  2000              MOVS     r0,#0
000364  f44f4178          MOV      r1,#0xf800
000368  a22c              ADR      r2,|L6.1052|
00036a  e9cd2100          STRD     r2,r1,[sp,#0]
00036e  9002              STR      r0,[sp,#8]
000370  4826              LDR      r0,|L6.1036|
000372  7d82              LDRB     r2,[r0,#0x16]  ; Snake
000374  2301              MOVS     r3,#1
000376  2103              MOVS     r1,#3
000378  2074              MOVS     r0,#0x74
00037a  f7fffffe          BL       display_num_format
;;;390    		//LCD_ShowNum(50, 280, (u32)Snake.Score, 4, 16);
;;;391    		Food.Yes = 1;  //食物标志置1
00037e  2001              MOVS     r0,#1
000380  4925              LDR      r1,|L6.1048|
000382  7088              STRB     r0,[r1,#2]
                  |L6.900|
;;;392    	}
;;;393    	/////////////////////////////////////////////////////////////////
;;;394    
;;;395    	/***************************放果子程序*************************/
;;;396    	if (Food.Yes == 0)
000384  4824              LDR      r0,|L6.1048|
000386  7880              LDRB     r0,[r0,#2]  ; Food
000388  b920              CBNZ     r0,|L6.916|
;;;397    	{
;;;398    		Trun_On_Point(Food.X, Food.Y);
00038a  4a23              LDR      r2,|L6.1048|
00038c  7851              LDRB     r1,[r2,#1]  ; Food
00038e  7810              LDRB     r0,[r2,#0]  ; Food
000390  f7fffffe          BL       Trun_On_Point
                  |L6.916|
;;;399    	}
;;;400    	if (Food.Yes == 1)
000394  4820              LDR      r0,|L6.1048|
000396  7880              LDRB     r0,[r0,#2]  ; Food
000398  2801              CMP      r0,#1
00039a  d143              BNE      |L6.1060|
;;;401    	{
;;;402    		while (1)
00039c  e040              B        |L6.1056|
                  |L6.926|
;;;403    		{
;;;404    			Food.X = rand() % 28 + 1;      			//获得随机数
00039e  f7fffffe          BL       rand
0003a2  211c              MOVS     r1,#0x1c
0003a4  fb90f2f1          SDIV     r2,r0,r1
0003a8  fb010012          MLS      r0,r1,r2,r0
0003ac  1c40              ADDS     r0,r0,#1
0003ae  491a              LDR      r1,|L6.1048|
0003b0  7008              STRB     r0,[r1,#0]
;;;405    			Food.Y = rand() % 28 + 3;
0003b2  f7fffffe          BL       rand
0003b6  211c              MOVS     r1,#0x1c
0003b8  fb90f2f1          SDIV     r2,r0,r1
0003bc  fb010012          MLS      r0,r1,r2,r0
0003c0  1cc0              ADDS     r0,r0,#3
0003c2  4915              LDR      r1,|L6.1048|
0003c4  7048              STRB     r0,[r1,#1]
;;;406    
;;;407    			for (i = 0; i < Snake.Long; i++)				//判断产生的食物坐标是否和蛇身重合
0003c6  2400              MOVS     r4,#0
0003c8  e00f              B        |L6.1002|
                  |L6.970|
;;;408    			{
;;;409    				if ((Food.X == Snake.X[i]) && (Food.X == Snake.Y[i])) break;
0003ca  4813              LDR      r0,|L6.1048|
0003cc  7800              LDRB     r0,[r0,#0]  ; Food
0003ce  490f              LDR      r1,|L6.1036|
0003d0  5d09              LDRB     r1,[r1,r4]
0003d2  4288              CMP      r0,r1
0003d4  d107              BNE      |L6.998|
0003d6  4810              LDR      r0,|L6.1048|
0003d8  7801              LDRB     r1,[r0,#0]  ; Food
0003da  480c              LDR      r0,|L6.1036|
0003dc  300a              ADDS     r0,r0,#0xa
0003de  5d00              LDRB     r0,[r0,r4]
0003e0  4281              CMP      r1,r0
0003e2  d100              BNE      |L6.998|
0003e4  e005              B        |L6.1010|
                  |L6.998|
0003e6  1c60              ADDS     r0,r4,#1              ;407
0003e8  b2c4              UXTB     r4,r0                 ;407
                  |L6.1002|
0003ea  4808              LDR      r0,|L6.1036|
0003ec  7d00              LDRB     r0,[r0,#0x14]         ;407  ; Snake
0003ee  42a0              CMP      r0,r4                 ;407
0003f0  dceb              BGT      |L6.970|
                  |L6.1010|
0003f2  bf00              NOP      
;;;410    			}
;;;411    			if (i == Snake.Long)
0003f4  4805              LDR      r0,|L6.1036|
0003f6  7d00              LDRB     r0,[r0,#0x14]  ; Snake
0003f8  42a0              CMP      r0,r4
0003fa  d111              BNE      |L6.1056|
;;;412    			{
;;;413    				Food.Yes = 0;
0003fc  2000              MOVS     r0,#0
0003fe  4906              LDR      r1,|L6.1048|
000400  7088              STRB     r0,[r1,#2]
;;;414    				break;								//产生有效的食物坐标
000402  e00e              B        |L6.1058|
                  |L6.1028|
                          DCD      Key_Value
                  |L6.1032|
                          DCD      Key_V_temp
                  |L6.1036|
                          DCD      Snake
                  |L6.1040|
                          DCD      game_sel
                  |L6.1044|
                          DCD      snake_flag
                  |L6.1048|
                          DCD      Food
                  |L6.1052|
00041c  256400            DCB      "%d",0
00041f  00                DCB      0
                  |L6.1056|
000420  e7bd              B        |L6.926|
                  |L6.1058|
000422  bf00              NOP      
                  |L6.1060|
;;;415    			}
;;;416    		}
;;;417    	}
;;;418    
;;;419    	Run_Ahead();//直走
000424  f7fffffe          BL       Run_Ahead
;;;420    
;;;421    	/**************************调整游戏速度************************/
;;;422    	bsp_DelayMS(201 - Snake.Level * 10);
000428  4904              LDR      r1,|L6.1084|
00042a  7dc9              LDRB     r1,[r1,#0x17]  ; Snake
00042c  eb010181          ADD      r1,r1,r1,LSL #2
000430  22c9              MOVS     r2,#0xc9
000432  eba20041          SUB      r0,r2,r1,LSL #1
000436  f7fffffe          BL       bsp_DelayMS
;;;423    	/////////////////////////////////////////////////////////////////			
;;;424    }
00043a  bd3e              POP      {r1-r5,pc}
;;;425    
                          ENDP

                  |L6.1084|
                          DCD      Snake

                          AREA ||i.Trun_Off_Point||, CODE, READONLY, ALIGN=1

                  Trun_Off_Point PROC
;;;32     //=================================================================
;;;33     void Trun_Off_Point(u8 x, u8 y)
000000  b5f8              PUSH     {r3-r7,lr}
;;;34     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;35     	LCD_Fill((u16)(x * 4), (u16)(y * 4), (u16)(x * 4 + 4), (u16)(y * 4 + 4), BLACK);
000006  2000              MOVS     r0,#0
000008  2604              MOVS     r6,#4
00000a  eb060385          ADD      r3,r6,r5,LSL #2
00000e  eb060284          ADD      r2,r6,r4,LSL #2
000012  00a9              LSLS     r1,r5,#2
000014  9000              STR      r0,[sp,#0]
000016  00a0              LSLS     r0,r4,#2
000018  f7fffffe          BL       LCD_Fill
;;;36     }
00001c  bdf8              POP      {r3-r7,pc}
;;;37     
                          ENDP


                          AREA ||i.Trun_On_Point||, CODE, READONLY, ALIGN=1

                  Trun_On_Point PROC
;;;19     //=================================================================
;;;20     void Trun_On_Point(u8 x, u8 y)
000000  b5f8              PUSH     {r3-r7,lr}
;;;21     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;22     	LCD_Fill((u16)(x * 4), (u16)(y * 4), (u16)(x * 4 + 4), (u16)(y * 4 + 4), RED);
000006  f44f4078          MOV      r0,#0xf800
00000a  2604              MOVS     r6,#4
00000c  eb060385          ADD      r3,r6,r5,LSL #2
000010  eb060284          ADD      r2,r6,r4,LSL #2
000014  00a9              LSLS     r1,r5,#2
000016  9000              STR      r0,[sp,#0]
000018  00a0              LSLS     r0,r4,#2
00001a  f7fffffe          BL       LCD_Fill
;;;23     }
00001e  bdf8              POP      {r3-r7,pc}
;;;24     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  Snake
                          %        24

                          AREA ||.data||, DATA, ALIGN=0

                  Key_V_temp
000000  00                DCB      0x00
                  Key_Value
000001  00                DCB      0x00
                  snake_flag
000002  00                DCB      0x00
                  Food
000003  00                DCB      0x00
000004  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\snake.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_snake_c_bf25aa09____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_snake_c_bf25aa09____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_snake_c_bf25aa09____REVSH|
#line 128
|__asm___7_snake_c_bf25aa09____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
